{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { cn } from \"@/lib/utils\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,mLAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;0CACtB,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { cn } from \"@/lib/utils\"\nimport { CheckIcon, ChevronRightIcon, DotFilledIcon } from \"@radix-ui/react-icons\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 bg-white\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin] bg-white\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <DotFilledIcon className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/file.action.ts"],"sourcesContent":["\"use server\";\n\nimport { createAdminClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const uploadFile = async ({\n    file,\n    ownerId,\n    accountId,\n    path,\n}: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n\n        const bucketFile = await storage.createFile(\n            appwriteConfig.bucketId,\n            ID.unique(),\n            inputFile\n        );\n\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId: accountId,\n            users: [],\n            bucketFieldId: bucketFile.$id,\n        };\n\n        const newFile = await databases\n            .createDocument(\n                appwriteConfig.databaseId,\n                appwriteConfig.filesCollectionId,\n                ID.unique(),\n                fileDocument\n            )\n            .catch(async (error: unknown) => {\n                await storage.deleteFile(\n                    appwriteConfig.bucketId,\n                    bucketFile.$id\n                );\n                handleError(error, \"Failed to create file document\");\n            });\n\n        revalidatePath(path);\n\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file.\");\n    }\n};\n\nconst createQueries = (\n    currentUser: Models.Document,\n    types: string[],\n    searchText: string,\n    sort: string,\n    limit?: number\n) => {\n    const queries = [\n        Query.or([\n            Query.equal(\"owner\", [currentUser.$id]),\n            Query.contains(\"users\", [currentUser.email]),\n        ]),\n    ];\n\n    if (types.length > 0) queries.push(Query.equal(\"type\", types));\n    if (searchText) queries.push(Query.contains(\"name\", searchText));\n    if (limit) queries.push(Query.limit(limit));\n\n    if (sort) {\n        const [sortBy, orderBy] = sort.split(\"-\");\n\n        queries.push(\n            orderBy === \"asc\" ? Query.orderAsc(sortBy) : Query.orderDesc(sortBy)\n        );\n    }\n\n    return queries;\n};\n\nexport const getFiles = async ({\n    types = [],\n    searchText = \"\",\n    sort = \"$createdAt-desc\",\n    limit,\n}: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n\n        if (!currentUser) throw new Error(\"User not found\");\n\n        const queries = createQueries(\n            currentUser,\n            types,\n            searchText,\n            sort,\n            limit\n        );\n\n        console.log({ currentUser, queries });\n\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            queries\n        );\n\n        console.log({ files });\n\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n};\n\nexport const renameFile = async ({\n    fileId,\n    name,\n    extension,\n    path,\n}: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const newName = `${name}.${extension}`;\n\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const updateFileUser = async ({\n    fileId,\n    emails,\n    path,\n}: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                users: emails,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const deleteFile = async ({\n    fileId,\n    bucketFileId,\n    path,\n}: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify({ status: \"success\" });\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport async function getTotalSpaceUsed() {\n  try {\n    const { databases } = await createSessionClie();\n    const currentUser = await getCurrentUser();\n    if (!currentUser) throw new Error(\"User is not authenticated.\");\n\n    const files = await databases.listDocuments(\n      appwriteConfig.databaseId,\n      appwriteConfig.filesCollectionId,\n      [Query.equal(\"owner\", [currentUser.$id])],\n    );\n\n    const totalSpace = {\n      image: { size: 0, latestDate: \"\" },\n      document: { size: 0, latestDate: \"\" },\n      video: { size: 0, latestDate: \"\" },\n      audio: { size: 0, latestDate: \"\" },\n      other: { size: 0, latestDate: \"\" },\n      used: 0,\n      all: 2 * 1024 * 1024 * 1024 /* 2GB available bucket storage */,\n    };\n\n    files.documents.forEach((file) => {\n      const fileType = file.type as FileType;\n      totalSpace[fileType].size += file.size;\n      totalSpace.used += file.size;\n\n      if (\n        !totalSpace[fileType].latestDate ||\n        new Date(file.$updatedAt) > new Date(totalSpace[fileType].latestDate)\n      ) {\n        totalSpace[fileType].latestDate = file.$updatedAt;\n      }\n    });\n\n    return parseStringify(totalSpace);\n  } catch (error) {\n    handleError(error, \"Error calculating total space used:, \");\n  }\n}"],"names":[],"mappings":";;;;;;IAwLa,aAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/file.action.ts"],"sourcesContent":["\"use server\";\n\nimport { createAdminClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const uploadFile = async ({\n    file,\n    ownerId,\n    accountId,\n    path,\n}: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n\n        const bucketFile = await storage.createFile(\n            appwriteConfig.bucketId,\n            ID.unique(),\n            inputFile\n        );\n\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId: accountId,\n            users: [],\n            bucketFieldId: bucketFile.$id,\n        };\n\n        const newFile = await databases\n            .createDocument(\n                appwriteConfig.databaseId,\n                appwriteConfig.filesCollectionId,\n                ID.unique(),\n                fileDocument\n            )\n            .catch(async (error: unknown) => {\n                await storage.deleteFile(\n                    appwriteConfig.bucketId,\n                    bucketFile.$id\n                );\n                handleError(error, \"Failed to create file document\");\n            });\n\n        revalidatePath(path);\n\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file.\");\n    }\n};\n\nconst createQueries = (\n    currentUser: Models.Document,\n    types: string[],\n    searchText: string,\n    sort: string,\n    limit?: number\n) => {\n    const queries = [\n        Query.or([\n            Query.equal(\"owner\", [currentUser.$id]),\n            Query.contains(\"users\", [currentUser.email]),\n        ]),\n    ];\n\n    if (types.length > 0) queries.push(Query.equal(\"type\", types));\n    if (searchText) queries.push(Query.contains(\"name\", searchText));\n    if (limit) queries.push(Query.limit(limit));\n\n    if (sort) {\n        const [sortBy, orderBy] = sort.split(\"-\");\n\n        queries.push(\n            orderBy === \"asc\" ? Query.orderAsc(sortBy) : Query.orderDesc(sortBy)\n        );\n    }\n\n    return queries;\n};\n\nexport const getFiles = async ({\n    types = [],\n    searchText = \"\",\n    sort = \"$createdAt-desc\",\n    limit,\n}: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n\n        if (!currentUser) throw new Error(\"User not found\");\n\n        const queries = createQueries(\n            currentUser,\n            types,\n            searchText,\n            sort,\n            limit\n        );\n\n        console.log({ currentUser, queries });\n\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            queries\n        );\n\n        console.log({ files });\n\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n};\n\nexport const renameFile = async ({\n    fileId,\n    name,\n    extension,\n    path,\n}: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const newName = `${name}.${extension}`;\n\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const updateFileUser = async ({\n    fileId,\n    emails,\n    path,\n}: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                users: emails,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const deleteFile = async ({\n    fileId,\n    bucketFileId,\n    path,\n}: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify({ status: \"success\" });\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport async function getTotalSpaceUsed() {\n  try {\n    const { databases } = await createSessionClie();\n    const currentUser = await getCurrentUser();\n    if (!currentUser) throw new Error(\"User is not authenticated.\");\n\n    const files = await databases.listDocuments(\n      appwriteConfig.databaseId,\n      appwriteConfig.filesCollectionId,\n      [Query.equal(\"owner\", [currentUser.$id])],\n    );\n\n    const totalSpace = {\n      image: { size: 0, latestDate: \"\" },\n      document: { size: 0, latestDate: \"\" },\n      video: { size: 0, latestDate: \"\" },\n      audio: { size: 0, latestDate: \"\" },\n      other: { size: 0, latestDate: \"\" },\n      used: 0,\n      all: 2 * 1024 * 1024 * 1024 /* 2GB available bucket storage */,\n    };\n\n    files.documents.forEach((file) => {\n      const fileType = file.type as FileType;\n      totalSpace[fileType].size += file.size;\n      totalSpace.used += file.size;\n\n      if (\n        !totalSpace[fileType].latestDate ||\n        new Date(file.$updatedAt) > new Date(totalSpace[fileType].latestDate)\n      ) {\n        totalSpace[fileType].latestDate = file.$updatedAt;\n      }\n    });\n\n    return parseStringify(totalSpace);\n  } catch (error) {\n    handleError(error, \"Error calculating total space used:, \");\n  }\n}"],"names":[],"mappings":";;;;;;IAqIa,aAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/file.action.ts"],"sourcesContent":["\"use server\";\n\nimport { createAdminClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const uploadFile = async ({\n    file,\n    ownerId,\n    accountId,\n    path,\n}: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n\n        const bucketFile = await storage.createFile(\n            appwriteConfig.bucketId,\n            ID.unique(),\n            inputFile\n        );\n\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId: accountId,\n            users: [],\n            bucketFieldId: bucketFile.$id,\n        };\n\n        const newFile = await databases\n            .createDocument(\n                appwriteConfig.databaseId,\n                appwriteConfig.filesCollectionId,\n                ID.unique(),\n                fileDocument\n            )\n            .catch(async (error: unknown) => {\n                await storage.deleteFile(\n                    appwriteConfig.bucketId,\n                    bucketFile.$id\n                );\n                handleError(error, \"Failed to create file document\");\n            });\n\n        revalidatePath(path);\n\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file.\");\n    }\n};\n\nconst createQueries = (\n    currentUser: Models.Document,\n    types: string[],\n    searchText: string,\n    sort: string,\n    limit?: number\n) => {\n    const queries = [\n        Query.or([\n            Query.equal(\"owner\", [currentUser.$id]),\n            Query.contains(\"users\", [currentUser.email]),\n        ]),\n    ];\n\n    if (types.length > 0) queries.push(Query.equal(\"type\", types));\n    if (searchText) queries.push(Query.contains(\"name\", searchText));\n    if (limit) queries.push(Query.limit(limit));\n\n    if (sort) {\n        const [sortBy, orderBy] = sort.split(\"-\");\n\n        queries.push(\n            orderBy === \"asc\" ? Query.orderAsc(sortBy) : Query.orderDesc(sortBy)\n        );\n    }\n\n    return queries;\n};\n\nexport const getFiles = async ({\n    types = [],\n    searchText = \"\",\n    sort = \"$createdAt-desc\",\n    limit,\n}: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n\n        if (!currentUser) throw new Error(\"User not found\");\n\n        const queries = createQueries(\n            currentUser,\n            types,\n            searchText,\n            sort,\n            limit\n        );\n\n        console.log({ currentUser, queries });\n\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            queries\n        );\n\n        console.log({ files });\n\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n};\n\nexport const renameFile = async ({\n    fileId,\n    name,\n    extension,\n    path,\n}: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const newName = `${name}.${extension}`;\n\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const updateFileUser = async ({\n    fileId,\n    emails,\n    path,\n}: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                users: emails,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const deleteFile = async ({\n    fileId,\n    bucketFileId,\n    path,\n}: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify({ status: \"success\" });\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport async function getTotalSpaceUsed() {\n  try {\n    const { databases } = await createSessionClie();\n    const currentUser = await getCurrentUser();\n    if (!currentUser) throw new Error(\"User is not authenticated.\");\n\n    const files = await databases.listDocuments(\n      appwriteConfig.databaseId,\n      appwriteConfig.filesCollectionId,\n      [Query.equal(\"owner\", [currentUser.$id])],\n    );\n\n    const totalSpace = {\n      image: { size: 0, latestDate: \"\" },\n      document: { size: 0, latestDate: \"\" },\n      video: { size: 0, latestDate: \"\" },\n      audio: { size: 0, latestDate: \"\" },\n      other: { size: 0, latestDate: \"\" },\n      used: 0,\n      all: 2 * 1024 * 1024 * 1024 /* 2GB available bucket storage */,\n    };\n\n    files.documents.forEach((file) => {\n      const fileType = file.type as FileType;\n      totalSpace[fileType].size += file.size;\n      totalSpace.used += file.size;\n\n      if (\n        !totalSpace[fileType].latestDate ||\n        new Date(file.$updatedAt) > new Date(totalSpace[fileType].latestDate)\n      ) {\n        totalSpace[fileType].latestDate = file.$updatedAt;\n      }\n    });\n\n    return parseStringify(totalSpace);\n  } catch (error) {\n    handleError(error, \"Error calculating total space used:, \");\n  }\n}"],"names":[],"mappings":";;;;;;IAgKa,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ActionModalContent.tsx"],"sourcesContent":["import { Models } from \"node-appwrite\";\nimport React from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport FormatedDateTime from \"./FormatedDateTime\";\nimport { convertFileSize, formatDateTime } from \"@/lib/utils\";\nimport { Input } from \"./ui/input\";\nimport { Button } from \"./ui/button\";\nimport Image from \"next/image\";\n\ninterface Props {\n    file: Models.Document;\n    onInputChange: React.Dispatch<React.SetStateAction<string[]>>;\n    onRemove: (email: string) => void;\n}\n\nexport const ImageThumbnail = ({ file }: { file: Models.Document }) => (\n    <div className=\"file-details-thumbnail\">\n        <Thumbnail type={file.type} extension={file.extension} url={file.url} />\n\n        <div className=\"flex flex-col\">\n            <p className=\"subtitle-2 mb-1\">{file.name}</p>\n            <FormatedDateTime date={file.$createdAt} className=\"caption\" />\n        </div>\n    </div>\n);\n\nconst DetailRow = ({ label, value }: { label: string; value: string }) => (\n    <div className=\"flex\">\n        <p className=\"file-details-label\">{label}</p>\n        <p className=\"file-details-value\">{value}</p>\n    </div>\n);\n\nexport const FileDetails = ({ file }: { file: Models.Document }) => {\n    return (\n        <>\n            <ImageThumbnail file={file} />\n\n            <div className=\"space-y-4 px-2 pt-2\">\n                <DetailRow label=\"Format: \" value={file.extension} />\n                <DetailRow label=\"Size: \" value={convertFileSize(file.size)} />\n                <DetailRow label=\"Owner: \" value={file.owner.fullName} />\n                <DetailRow\n                    label=\"Last Edit: \"\n                    value={formatDateTime(file.$updatedAt)}\n                />\n            </div>\n        </>\n    );\n};\n\nexport const ShareInput = ({ file, onInputChange, onRemove }: Props) => {\n    return (\n        <>\n            <ImageThumbnail file={file} />\n\n            <div className=\"share-wrapper\">\n                <p className=\"subtitle-2 pl-1 text-light-100\">\n                    Share files with other users\n                </p>\n\n                <Input\n                    type=\"email\"\n                    placeholder=\"Enter email address\"\n                    onChange={(e) =>\n                        onInputChange(e.target.value.trim().split(\",\"))\n                    }\n                    className=\"share-input-field\"\n                />\n\n                <div className=\"pt-4\">\n                    <div className=\"flex justify-between\">\n                        <p className=\"subtitle-2 text-light-100\">Shared with</p>\n                        <p className=\"subtitle-2 text-light-200\">\n                            {file.users.length} users\n                        </p>\n                    </div>\n\n                    <ul className=\"pt-2\">\n                        {file.users.map((email: string) => (\n                            <li key={email} className=\"flex items-center justify-between gap-2\">\n                                <p className=\"subtitle-2 line-clamp-1\">{email}</p>\n                                <Button onClick={() => onRemove(email)} className=\"share-remove-user\">\n                                    <Image src=\"/assets/icons/remove.svg\" alt=\"Remove\" width={24} height={24} className=\"remove-icon\" />\n                                </Button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </>\n    );\n};\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQO,MAAM,iBAAiB,CAAC,EAAE,IAAI,EAA6B,iBAC9D,6LAAC;QAAI,WAAU;;0BACX,6LAAC,2HAAA,CAAA,UAAS;gBAAC,MAAM,KAAK,IAAI;gBAAE,WAAW,KAAK,SAAS;gBAAE,KAAK,KAAK,GAAG;;;;;;0BAEpE,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAE,WAAU;kCAAmB,KAAK,IAAI;;;;;;kCACzC,6LAAC,kIAAA,CAAA,UAAgB;wBAAC,MAAM,KAAK,UAAU;wBAAE,WAAU;;;;;;;;;;;;;;;;;;KANlD;AAWb,MAAM,YAAY,CAAC,EAAE,KAAK,EAAE,KAAK,EAAoC,iBACjE,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAE,WAAU;0BAAsB;;;;;;0BACnC,6LAAC;gBAAE,WAAU;0BAAsB;;;;;;;;;;;;MAHrC;AAOC,MAAM,cAAc,CAAC,EAAE,IAAI,EAA6B;IAC3D,qBACI;;0BACI,6LAAC;gBAAe,MAAM;;;;;;0BAEtB,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAU,OAAM;wBAAW,OAAO,KAAK,SAAS;;;;;;kCACjD,6LAAC;wBAAU,OAAM;wBAAS,OAAO,CAAA,GAAA,+GAAA,CAAA,kBAAe,AAAD,EAAE,KAAK,IAAI;;;;;;kCAC1D,6LAAC;wBAAU,OAAM;wBAAU,OAAO,KAAK,KAAK,CAAC,QAAQ;;;;;;kCACrD,6LAAC;wBACG,OAAM;wBACN,OAAO,CAAA,GAAA,+GAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,UAAU;;;;;;;;;;;;;;AAKzD;MAhBa;AAkBN,MAAM,aAAa,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAS;IAC/D,qBACI;;0BACI,6LAAC;gBAAe,MAAM;;;;;;0BAEtB,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAE,WAAU;kCAAiC;;;;;;kCAI9C,6LAAC,6HAAA,CAAA,QAAK;wBACF,MAAK;wBACL,aAAY;wBACZ,UAAU,CAAC,IACP,cAAc,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;wBAE9C,WAAU;;;;;;kCAGd,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAI,WAAU;;kDACX,6LAAC;wCAAE,WAAU;kDAA4B;;;;;;kDACzC,6LAAC;wCAAE,WAAU;;4CACR,KAAK,KAAK,CAAC,MAAM;4CAAC;;;;;;;;;;;;;0CAI3B,6LAAC;gCAAG,WAAU;0CACT,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,sBACb,6LAAC;wCAAe,WAAU;;0DACtB,6LAAC;gDAAE,WAAU;0DAA2B;;;;;;0DACxC,6LAAC,8HAAA,CAAA,SAAM;gDAAC,SAAS,IAAM,SAAS;gDAAQ,WAAU;0DAC9C,cAAA,6LAAC,gIAAA,CAAA,UAAK;oDAAC,KAAI;oDAA2B,KAAI;oDAAS,OAAO;oDAAI,QAAQ;oDAAI,WAAU;;;;;;;;;;;;uCAHnF;;;;;;;;;;;;;;;;;;;;;;;;AAYrC;MAzCa","debugId":null}},
    {"offset": {"line": 711, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ActionDropdown.tsx"],"sourcesContent":["\"use client\";\n\nimport { Models } from \"node-appwrite\";\nimport React, { useState } from \"react\";\nimport {\n    Dialog,\n    DialogContent,\n    DialogFooter,\n    DialogHeader,\n    DialogTitle,\n} from \"@/components/ui/dialog\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuSeparator,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport Image from \"next/image\";\nimport { actionsDropdownItems } from \"@/constants\";\nimport Link from \"next/link\";\nimport { constructDownloadUrl } from \"@/lib/utils\";\nimport { Input } from \"./ui/input\";\nimport { Button } from \"./ui/button\";\nimport {\n    deleteFile,\n    renameFile,\n    updateFileUser,\n} from \"@/lib/actions/file.action\";\nimport { usePathname } from \"next/navigation\";\nimport { FileDetails, ShareInput } from \"./ActionModalContent\";\n\nconst ActionDropdown = ({ file }: { file: Models.Document }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const [action, setAction] = useState<ActionType | null>(null);\n    const [name, setName] = useState(file.name);\n    const [isLoading, setIsLoading] = useState(false);\n    const [emails, setEmails] = useState<string[]>([]);\n    const path = usePathname();\n\n    const closeAllModals = () => {\n        setIsModalOpen(false);\n        setIsDropdownOpen(false);\n        setAction(null);\n        setName(file.name);\n        // setEmails([]);\n    };\n\n    const handleActions = async () => {\n        if (!action) return;\n        setIsLoading(true);\n\n        let success = false;\n\n        const actions = {\n            rename: () =>\n                renameFile({\n                    fileId: file.$id,\n                    name,\n                    extension: file.extension,\n                    path,\n                }),\n            share: () => updateFileUser({ fileId: file.$id, emails, path }),\n            delete: () =>\n                deleteFile({\n                    fileId: file.$id,\n                    path,\n                    bucketFileId: file.bucketFieldId,\n                }),\n        };\n\n        success = await actions[action.value as keyof typeof actions]();\n\n        if (success) closeAllModals();\n\n        setIsLoading(false);\n    };\n\n    const handleClose = () => {\n        setIsModalOpen(false);\n        setIsDropdownOpen(false);\n    };\n\n    const handleRemoveUser = async (email: string) => {\n        const updatedEmails = emails.filter((e) => e !== email);\n\n        const success = await updateFileUser({\n            fileId: file.$id,\n            emails: updatedEmails,\n            path,\n        });\n\n        if (success) setEmails(updatedEmails);\n        closeAllModals();\n    };\n\n    const renderDialogContent = () => {\n        if (!action) return null;\n\n        const { value, label } = action;\n\n        return (\n            <DialogContent className=\"shad-dialog button\">\n                <DialogHeader className=\"flex flex-col gap-3\">\n                    <DialogTitle className=\"text-center text-light-100\">\n                        {label}\n                    </DialogTitle>\n                    {value === \"rename\" && (\n                        <Input\n                            type=\"text\"\n                            className=\"rounded-md\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    )}\n\n                    {value === \"share\" && (\n                        <ShareInput\n                            file={file}\n                            onInputChange={setEmails}\n                            onRemove={handleRemoveUser}\n                        />\n                    )}\n\n                    {value === \"details\" && <FileDetails file={file} />}\n\n                    {value === \"delete\" && (\n                        <p className=\"delete-confirmation\">\n                            Are you sure you want to delete{\" \"}\n                            <span className=\"delete-file-name\">\n                                {file.name}\n                            </span>\n                        </p>\n                    )}\n                </DialogHeader>\n\n                {[\"rename\", \"share\", \"delete\"].includes(value) && (\n                    <DialogFooter className=\"flex flex-col gap-3 md:flex-row\">\n                        <Button\n                            className=\"modal-cancel-button\"\n                            onClick={closeAllModals}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            className=\"modal-submit-button text-white\"\n                            onClick={handleActions}\n                        >\n                            <p className=\"capitalize\">{value}</p>\n\n                            {isLoading && (\n                                <Image\n                                    src=\"/assets/icons/loader.svg\"\n                                    alt=\"loader\"\n                                    width={30}\n                                    height={30}\n                                />\n                            )}\n                        </Button>\n                    </DialogFooter>\n                )}\n            </DialogContent>\n        );\n    };\n\n    return (\n        <Dialog open={isModalOpen} onOpenChange={setIsModalOpen}>\n            <DropdownMenu\n                open={isDropdownOpen}\n                onOpenChange={setIsDropdownOpen}\n            >\n                <DropdownMenuTrigger className=\"shad-no-focus\">\n                    <Image\n                        src=\"/assets/icons/dots.svg\"\n                        alt=\"Menu\"\n                        width={34}\n                        height={34}\n                    />\n                </DropdownMenuTrigger>\n                <DropdownMenuContent>\n                    <DropdownMenuLabel className=\"max-w-[200px] truncate\">\n                        {file.name}\n                    </DropdownMenuLabel>\n                    <DropdownMenuSeparator />\n\n                    {actionsDropdownItems.map((actionItem) => (\n                        <DropdownMenuItem\n                            key={actionItem.value}\n                            className=\"shad-dropdown-item\"\n                            onClick={() => {\n                                setAction(actionItem);\n\n                                if (\n                                    [\n                                        \"rename\",\n                                        \"share\",\n                                        \"delete\",\n                                        \"details\",\n                                    ].includes(actionItem.value)\n                                ) {\n                                    setIsModalOpen(true);\n                                    setIsDropdownOpen(false);\n                                } else {\n                                    handleClose();\n                                }\n                            }}\n                        >\n                            {actionItem.value === \"download\" ? (\n                                <Link\n                                    href={constructDownloadUrl(\n                                        file.bucketFieldId\n                                    )}\n                                    download={file.name}\n                                    className=\"flex items-center gap-2\"\n                                >\n                                    <Image\n                                        src={actionItem.icon}\n                                        alt={actionItem.label}\n                                        width={30}\n                                        height={30}\n                                    />\n\n                                    {actionItem.label}\n                                </Link>\n                            ) : (\n                                <div className=\"flex items-center gap-2\">\n                                    <Image\n                                        src={actionItem.icon}\n                                        alt={actionItem.label}\n                                        width={30}\n                                        height={30}\n                                    />\n\n                                    {actionItem.label}\n                                </div>\n                            )}\n                        </DropdownMenuItem>\n                    ))}\n                </DropdownMenuContent>\n            </DropdownMenu>\n\n            {renderDialogContent()}\n        </Dialog>\n    );\n};\n\nexport default ActionDropdown;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1065, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { cn } from \"@/lib/utils\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"@radix-ui/react-icons\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDownIcon className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUpIcon className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDownIcon className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1278, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/Sort.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from \"@/components/ui/select\";\nimport { usePathname, useRouter } from \"next/navigation\";\nimport { sortTypes } from \"@/constants\";\n\nconst Sort = () => {\n\tconst path = usePathname();\n\tconst router = useRouter();\n\n\tconst handleSort = (value: string) => {\n\t\trouter.push(`${path}?sort=${value}`)\n\t} \n\n    return (\n        <Select onValueChange={handleSort} defaultValue={sortTypes[0].value}>\n            <SelectTrigger className=\"sort-select\">\n                <SelectValue placeholder={sortTypes[0].value} className=\"text-light-100\" />\n            </SelectTrigger>\n            <SelectContent className=\"sort-select-content\">\n                {sortTypes.map((sort) => (\n\t\t\t\t\t<SelectItem key={sort.label} className=\"shad-select-item\" value={sort.value}>\n\t\t\t\t\t\t{sort.label}\n\t\t\t\t\t</SelectItem>\n\t\t\t\t))}\n            </SelectContent>\n        </Select>\n    );\n};\n\nexport default Sort;\n"],"names":[],"mappings":";;;;AAGA;AAOA;AACA;;;AAXA;;;;AAaA,MAAM,OAAO;;IACZ,MAAM,OAAO,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IACvB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,aAAa,CAAC;QACnB,OAAO,IAAI,CAAC,GAAG,KAAK,MAAM,EAAE,OAAO;IACpC;IAEG,qBACI,6LAAC,8HAAA,CAAA,SAAM;QAAC,eAAe;QAAY,cAAc,qHAAA,CAAA,YAAS,CAAC,EAAE,CAAC,KAAK;;0BAC/D,6LAAC,8HAAA,CAAA,gBAAa;gBAAC,WAAU;0BACrB,cAAA,6LAAC,8HAAA,CAAA,cAAW;oBAAC,aAAa,qHAAA,CAAA,YAAS,CAAC,EAAE,CAAC,KAAK;oBAAE,WAAU;;;;;;;;;;;0BAE5D,6LAAC,8HAAA,CAAA,gBAAa;gBAAC,WAAU;0BACpB,qHAAA,CAAA,YAAS,CAAC,GAAG,CAAC,CAAC,qBAC3B,6LAAC,8HAAA,CAAA,aAAU;wBAAkB,WAAU;wBAAmB,OAAO,KAAK,KAAK;kCACzE,KAAK,KAAK;uBADK,KAAK,KAAK;;;;;;;;;;;;;;;;AAOhC;GAtBM;;QACQ,qIAAA,CAAA,cAAW;QACT,qIAAA,CAAA,YAAS;;;KAFnB;uCAwBS","debugId":null}}]
}