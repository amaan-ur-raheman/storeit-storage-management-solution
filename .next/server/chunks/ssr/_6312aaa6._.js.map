{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { cn } from \"@/lib/utils\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,gLAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;0CACtB,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { cn } from \"@/lib/utils\"\nimport { CheckIcon, ChevronRightIcon, DotFilledIcon } from \"@radix-ui/react-icons\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 bg-white\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin] bg-white\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <DotFilledIcon className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/file.action.ts"],"sourcesContent":["\"use server\";\n\nimport { createAdminClient, createSessionClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const uploadFile = async ({\n    file,\n    ownerId,\n    accountId,\n    path,\n}: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n\n        const bucketFile = await storage.createFile(\n            appwriteConfig.bucketId,\n            ID.unique(),\n            inputFile\n        );\n\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId: accountId,\n            users: [],\n            bucketFieldId: bucketFile.$id,\n        };\n\n        const newFile = await databases\n            .createDocument(\n                appwriteConfig.databaseId,\n                appwriteConfig.filesCollectionId,\n                ID.unique(),\n                fileDocument\n            )\n            .catch(async (error: unknown) => {\n                await storage.deleteFile(\n                    appwriteConfig.bucketId,\n                    bucketFile.$id\n                );\n                handleError(error, \"Failed to create file document\");\n            });\n\n        revalidatePath(path);\n\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file.\");\n    }\n};\n\nconst createQueries = (\n    currentUser: Models.Document,\n    types: string[],\n    searchText: string,\n    sort: string,\n    limit?: number\n) => {\n    const queries = [\n        Query.or([\n            Query.equal(\"owner\", [currentUser.$id]),\n            Query.contains(\"users\", [currentUser.email]),\n        ]),\n    ];\n\n    if (types.length > 0) queries.push(Query.equal(\"type\", types));\n    if (searchText) queries.push(Query.contains(\"name\", searchText));\n    if (limit) queries.push(Query.limit(limit));\n\n    if (sort) {\n        const [sortBy, orderBy] = sort.split(\"-\");\n\n        queries.push(\n            orderBy === \"asc\" ? Query.orderAsc(sortBy) : Query.orderDesc(sortBy)\n        );\n    }\n\n    return queries;\n};\n\nexport const getFiles = async ({\n    types = [],\n    searchText = \"\",\n    sort = \"$createdAt-desc\",\n    limit,\n}: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n\n        if (!currentUser) throw new Error(\"User not found\");\n\n        const queries = createQueries(\n            currentUser,\n            types,\n            searchText,\n            sort,\n            limit\n        );\n\n        console.log({ currentUser, queries });\n\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            queries\n        );\n\n        console.log({ files });\n\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n};\n\nexport const renameFile = async ({\n    fileId,\n    name,\n    extension,\n    path,\n}: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const newName = `${name}.${extension}`;\n\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const updateFileUser = async ({\n    fileId,\n    emails,\n    path,\n}: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                users: emails,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const deleteFile = async ({\n    fileId,\n    bucketFileId,\n    path,\n}: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify({ status: \"success\" });\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport async function getTotalSpaceUsed() {\n  try {\n    const { databases } = await createSessionClient();\n    const currentUser = await getCurrentUser();\n    if (!currentUser) throw new Error(\"User is not authenticated.\");\n\n    const files = await databases.listDocuments(\n      appwriteConfig.databaseId,\n      appwriteConfig.filesCollectionId,\n      [Query.equal(\"owner\", [currentUser.$id])],\n    );\n\n    const totalSpace = {\n      image: { size: 0, latestDate: \"\" },\n      document: { size: 0, latestDate: \"\" },\n      video: { size: 0, latestDate: \"\" },\n      audio: { size: 0, latestDate: \"\" },\n      other: { size: 0, latestDate: \"\" },\n      used: 0,\n      all: 2 * 1024 * 1024 * 1024 /* 2GB available bucket storage */,\n    };\n\n    files.documents.forEach((file) => {\n      const fileType = file.type as FileType;\n      totalSpace[fileType].size += file.size;\n      totalSpace.used += file.size;\n\n      if (\n        !totalSpace[fileType].latestDate ||\n        new Date(file.$updatedAt) > new Date(totalSpace[fileType].latestDate)\n      ) {\n        totalSpace[fileType].latestDate = file.$updatedAt;\n      }\n    });\n\n    return parseStringify(totalSpace);\n  } catch (error) {\n    handleError(error, \"Error calculating total space used:, \");\n  }\n}"],"names":[],"mappings":";;;;;;IAwLa,aAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/file.action.ts"],"sourcesContent":["\"use server\";\n\nimport { createAdminClient, createSessionClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const uploadFile = async ({\n    file,\n    ownerId,\n    accountId,\n    path,\n}: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n\n        const bucketFile = await storage.createFile(\n            appwriteConfig.bucketId,\n            ID.unique(),\n            inputFile\n        );\n\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId: accountId,\n            users: [],\n            bucketFieldId: bucketFile.$id,\n        };\n\n        const newFile = await databases\n            .createDocument(\n                appwriteConfig.databaseId,\n                appwriteConfig.filesCollectionId,\n                ID.unique(),\n                fileDocument\n            )\n            .catch(async (error: unknown) => {\n                await storage.deleteFile(\n                    appwriteConfig.bucketId,\n                    bucketFile.$id\n                );\n                handleError(error, \"Failed to create file document\");\n            });\n\n        revalidatePath(path);\n\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file.\");\n    }\n};\n\nconst createQueries = (\n    currentUser: Models.Document,\n    types: string[],\n    searchText: string,\n    sort: string,\n    limit?: number\n) => {\n    const queries = [\n        Query.or([\n            Query.equal(\"owner\", [currentUser.$id]),\n            Query.contains(\"users\", [currentUser.email]),\n        ]),\n    ];\n\n    if (types.length > 0) queries.push(Query.equal(\"type\", types));\n    if (searchText) queries.push(Query.contains(\"name\", searchText));\n    if (limit) queries.push(Query.limit(limit));\n\n    if (sort) {\n        const [sortBy, orderBy] = sort.split(\"-\");\n\n        queries.push(\n            orderBy === \"asc\" ? Query.orderAsc(sortBy) : Query.orderDesc(sortBy)\n        );\n    }\n\n    return queries;\n};\n\nexport const getFiles = async ({\n    types = [],\n    searchText = \"\",\n    sort = \"$createdAt-desc\",\n    limit,\n}: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n\n        if (!currentUser) throw new Error(\"User not found\");\n\n        const queries = createQueries(\n            currentUser,\n            types,\n            searchText,\n            sort,\n            limit\n        );\n\n        console.log({ currentUser, queries });\n\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            queries\n        );\n\n        console.log({ files });\n\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n};\n\nexport const renameFile = async ({\n    fileId,\n    name,\n    extension,\n    path,\n}: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const newName = `${name}.${extension}`;\n\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const updateFileUser = async ({\n    fileId,\n    emails,\n    path,\n}: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                users: emails,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const deleteFile = async ({\n    fileId,\n    bucketFileId,\n    path,\n}: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify({ status: \"success\" });\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport async function getTotalSpaceUsed() {\n  try {\n    const { databases } = await createSessionClient();\n    const currentUser = await getCurrentUser();\n    if (!currentUser) throw new Error(\"User is not authenticated.\");\n\n    const files = await databases.listDocuments(\n      appwriteConfig.databaseId,\n      appwriteConfig.filesCollectionId,\n      [Query.equal(\"owner\", [currentUser.$id])],\n    );\n\n    const totalSpace = {\n      image: { size: 0, latestDate: \"\" },\n      document: { size: 0, latestDate: \"\" },\n      video: { size: 0, latestDate: \"\" },\n      audio: { size: 0, latestDate: \"\" },\n      other: { size: 0, latestDate: \"\" },\n      used: 0,\n      all: 2 * 1024 * 1024 * 1024 /* 2GB available bucket storage */,\n    };\n\n    files.documents.forEach((file) => {\n      const fileType = file.type as FileType;\n      totalSpace[fileType].size += file.size;\n      totalSpace.used += file.size;\n\n      if (\n        !totalSpace[fileType].latestDate ||\n        new Date(file.$updatedAt) > new Date(totalSpace[fileType].latestDate)\n      ) {\n        totalSpace[fileType].latestDate = file.$updatedAt;\n      }\n    });\n\n    return parseStringify(totalSpace);\n  } catch (error) {\n    handleError(error, \"Error calculating total space used:, \");\n  }\n}"],"names":[],"mappings":";;;;;;IAqIa,aAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/file.action.ts"],"sourcesContent":["\"use server\";\n\nimport { createAdminClient, createSessionClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const uploadFile = async ({\n    file,\n    ownerId,\n    accountId,\n    path,\n}: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n\n        const bucketFile = await storage.createFile(\n            appwriteConfig.bucketId,\n            ID.unique(),\n            inputFile\n        );\n\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId: accountId,\n            users: [],\n            bucketFieldId: bucketFile.$id,\n        };\n\n        const newFile = await databases\n            .createDocument(\n                appwriteConfig.databaseId,\n                appwriteConfig.filesCollectionId,\n                ID.unique(),\n                fileDocument\n            )\n            .catch(async (error: unknown) => {\n                await storage.deleteFile(\n                    appwriteConfig.bucketId,\n                    bucketFile.$id\n                );\n                handleError(error, \"Failed to create file document\");\n            });\n\n        revalidatePath(path);\n\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file.\");\n    }\n};\n\nconst createQueries = (\n    currentUser: Models.Document,\n    types: string[],\n    searchText: string,\n    sort: string,\n    limit?: number\n) => {\n    const queries = [\n        Query.or([\n            Query.equal(\"owner\", [currentUser.$id]),\n            Query.contains(\"users\", [currentUser.email]),\n        ]),\n    ];\n\n    if (types.length > 0) queries.push(Query.equal(\"type\", types));\n    if (searchText) queries.push(Query.contains(\"name\", searchText));\n    if (limit) queries.push(Query.limit(limit));\n\n    if (sort) {\n        const [sortBy, orderBy] = sort.split(\"-\");\n\n        queries.push(\n            orderBy === \"asc\" ? Query.orderAsc(sortBy) : Query.orderDesc(sortBy)\n        );\n    }\n\n    return queries;\n};\n\nexport const getFiles = async ({\n    types = [],\n    searchText = \"\",\n    sort = \"$createdAt-desc\",\n    limit,\n}: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n\n        if (!currentUser) throw new Error(\"User not found\");\n\n        const queries = createQueries(\n            currentUser,\n            types,\n            searchText,\n            sort,\n            limit\n        );\n\n        console.log({ currentUser, queries });\n\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            queries\n        );\n\n        console.log({ files });\n\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n};\n\nexport const renameFile = async ({\n    fileId,\n    name,\n    extension,\n    path,\n}: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const newName = `${name}.${extension}`;\n\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const updateFileUser = async ({\n    fileId,\n    emails,\n    path,\n}: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                users: emails,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const deleteFile = async ({\n    fileId,\n    bucketFileId,\n    path,\n}: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify({ status: \"success\" });\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport async function getTotalSpaceUsed() {\n  try {\n    const { databases } = await createSessionClient();\n    const currentUser = await getCurrentUser();\n    if (!currentUser) throw new Error(\"User is not authenticated.\");\n\n    const files = await databases.listDocuments(\n      appwriteConfig.databaseId,\n      appwriteConfig.filesCollectionId,\n      [Query.equal(\"owner\", [currentUser.$id])],\n    );\n\n    const totalSpace = {\n      image: { size: 0, latestDate: \"\" },\n      document: { size: 0, latestDate: \"\" },\n      video: { size: 0, latestDate: \"\" },\n      audio: { size: 0, latestDate: \"\" },\n      other: { size: 0, latestDate: \"\" },\n      used: 0,\n      all: 2 * 1024 * 1024 * 1024 /* 2GB available bucket storage */,\n    };\n\n    files.documents.forEach((file) => {\n      const fileType = file.type as FileType;\n      totalSpace[fileType].size += file.size;\n      totalSpace.used += file.size;\n\n      if (\n        !totalSpace[fileType].latestDate ||\n        new Date(file.$updatedAt) > new Date(totalSpace[fileType].latestDate)\n      ) {\n        totalSpace[fileType].latestDate = file.$updatedAt;\n      }\n    });\n\n    return parseStringify(totalSpace);\n  } catch (error) {\n    handleError(error, \"Error calculating total space used:, \");\n  }\n}"],"names":[],"mappings":";;;;;;IAgKa,iBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ActionModalContent.tsx"],"sourcesContent":["import { Models } from \"node-appwrite\";\nimport React from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport FormatedDateTime from \"./FormatedDateTime\";\nimport { convertFileSize, formatDateTime } from \"@/lib/utils\";\nimport { Input } from \"./ui/input\";\nimport { Button } from \"./ui/button\";\nimport Image from \"next/image\";\n\ninterface Props {\n    file: Models.Document;\n    onInputChange: React.Dispatch<React.SetStateAction<string[]>>;\n    onRemove: (email: string) => void;\n}\n\nexport const ImageThumbnail = ({ file }: { file: Models.Document }) => (\n    <div className=\"file-details-thumbnail\">\n        <Thumbnail type={file.type} extension={file.extension} url={file.url} />\n\n        <div className=\"flex flex-col\">\n            <p className=\"subtitle-2 mb-1\">{file.name}</p>\n            <FormatedDateTime date={file.$createdAt} className=\"caption\" />\n        </div>\n    </div>\n);\n\nconst DetailRow = ({ label, value }: { label: string; value: string }) => (\n    <div className=\"flex\">\n        <p className=\"file-details-label\">{label}</p>\n        <p className=\"file-details-value\">{value}</p>\n    </div>\n);\n\nexport const FileDetails = ({ file }: { file: Models.Document }) => {\n    return (\n        <>\n            <ImageThumbnail file={file} />\n\n            <div className=\"space-y-4 px-2 pt-2\">\n                <DetailRow label=\"Format: \" value={file.extension} />\n                <DetailRow label=\"Size: \" value={convertFileSize(file.size)} />\n                <DetailRow label=\"Owner: \" value={file.owner.fullName} />\n                <DetailRow\n                    label=\"Last Edit: \"\n                    value={formatDateTime(file.$updatedAt)}\n                />\n            </div>\n        </>\n    );\n};\n\nexport const ShareInput = ({ file, onInputChange, onRemove }: Props) => {\n    return (\n        <>\n            <ImageThumbnail file={file} />\n\n            <div className=\"share-wrapper\">\n                <p className=\"subtitle-2 pl-1 text-light-100\">\n                    Share files with other users\n                </p>\n\n                <Input\n                    type=\"email\"\n                    placeholder=\"Enter email address\"\n                    onChange={(e) =>\n                        onInputChange(e.target.value.trim().split(\",\"))\n                    }\n                    className=\"share-input-field\"\n                />\n\n                <div className=\"pt-4\">\n                    <div className=\"flex justify-between\">\n                        <p className=\"subtitle-2 text-light-100\">Shared with</p>\n                        <p className=\"subtitle-2 text-light-200\">\n                            {file.users.length} users\n                        </p>\n                    </div>\n\n                    <ul className=\"pt-2\">\n                        {file.users.map((email: string) => (\n                            <li key={email} className=\"flex items-center justify-between gap-2\">\n                                <p className=\"subtitle-2 line-clamp-1\">{email}</p>\n                                <Button onClick={() => onRemove(email)} className=\"share-remove-user\">\n                                    <Image src=\"/assets/icons/remove.svg\" alt=\"Remove\" width={24} height={24} className=\"remove-icon\" />\n                                </Button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </>\n    );\n};\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQO,MAAM,iBAAiB,CAAC,EAAE,IAAI,EAA6B,iBAC9D,8OAAC;QAAI,WAAU;;0BACX,8OAAC,wHAAA,CAAA,UAAS;gBAAC,MAAM,KAAK,IAAI;gBAAE,WAAW,KAAK,SAAS;gBAAE,KAAK,KAAK,GAAG;;;;;;0BAEpE,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAE,WAAU;kCAAmB,KAAK,IAAI;;;;;;kCACzC,8OAAC,+HAAA,CAAA,UAAgB;wBAAC,MAAM,KAAK,UAAU;wBAAE,WAAU;;;;;;;;;;;;;;;;;;AAK/D,MAAM,YAAY,CAAC,EAAE,KAAK,EAAE,KAAK,EAAoC,iBACjE,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAE,WAAU;0BAAsB;;;;;;0BACnC,8OAAC;gBAAE,WAAU;0BAAsB;;;;;;;;;;;;AAIpC,MAAM,cAAc,CAAC,EAAE,IAAI,EAA6B;IAC3D,qBACI;;0BACI,8OAAC;gBAAe,MAAM;;;;;;0BAEtB,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAU,OAAM;wBAAW,OAAO,KAAK,SAAS;;;;;;kCACjD,8OAAC;wBAAU,OAAM;wBAAS,OAAO,CAAA,GAAA,4GAAA,CAAA,kBAAe,AAAD,EAAE,KAAK,IAAI;;;;;;kCAC1D,8OAAC;wBAAU,OAAM;wBAAU,OAAO,KAAK,KAAK,CAAC,QAAQ;;;;;;kCACrD,8OAAC;wBACG,OAAM;wBACN,OAAO,CAAA,GAAA,4GAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,UAAU;;;;;;;;;;;;;;AAKzD;AAEO,MAAM,aAAa,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAS;IAC/D,qBACI;;0BACI,8OAAC;gBAAe,MAAM;;;;;;0BAEtB,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAE,WAAU;kCAAiC;;;;;;kCAI9C,8OAAC,0HAAA,CAAA,QAAK;wBACF,MAAK;wBACL,aAAY;wBACZ,UAAU,CAAC,IACP,cAAc,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;wBAE9C,WAAU;;;;;;kCAGd,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAE,WAAU;kDAA4B;;;;;;kDACzC,8OAAC;wCAAE,WAAU;;4CACR,KAAK,KAAK,CAAC,MAAM;4CAAC;;;;;;;;;;;;;0CAI3B,8OAAC;gCAAG,WAAU;0CACT,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,sBACb,8OAAC;wCAAe,WAAU;;0DACtB,8OAAC;gDAAE,WAAU;0DAA2B;;;;;;0DACxC,8OAAC,2HAAA,CAAA,SAAM;gDAAC,SAAS,IAAM,SAAS;gDAAQ,WAAU;0DAC9C,cAAA,8OAAC,6HAAA,CAAA,UAAK;oDAAC,KAAI;oDAA2B,KAAI;oDAAS,OAAO;oDAAI,QAAQ;oDAAI,WAAU;;;;;;;;;;;;uCAHnF;;;;;;;;;;;;;;;;;;;;;;;;AAYrC","debugId":null}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ActionDropdown.tsx"],"sourcesContent":["\"use client\";\n\nimport { Models } from \"node-appwrite\";\nimport React, { useState } from \"react\";\nimport {\n    Dialog,\n    DialogContent,\n    DialogFooter,\n    DialogHeader,\n    DialogTitle,\n} from \"@/components/ui/dialog\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuSeparator,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport Image from \"next/image\";\nimport { actionsDropdownItems } from \"@/constants\";\nimport Link from \"next/link\";\nimport { constructDownloadUrl } from \"@/lib/utils\";\nimport { Input } from \"./ui/input\";\nimport { Button } from \"./ui/button\";\nimport {\n    deleteFile,\n    renameFile,\n    updateFileUser,\n} from \"@/lib/actions/file.action\";\nimport { usePathname } from \"next/navigation\";\nimport { FileDetails, ShareInput } from \"./ActionModalContent\";\n\nconst ActionDropdown = ({ file }: { file: Models.Document }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const [action, setAction] = useState<ActionType | null>(null);\n    const [name, setName] = useState(file.name);\n    const [isLoading, setIsLoading] = useState(false);\n    const [emails, setEmails] = useState<string[]>([]);\n    const path = usePathname();\n\n    const closeAllModals = () => {\n        setIsModalOpen(false);\n        setIsDropdownOpen(false);\n        setAction(null);\n        setName(file.name);\n        // setEmails([]);\n    };\n\n    const handleActions = async () => {\n        if (!action) return;\n        setIsLoading(true);\n\n        let success = false;\n\n        const actions = {\n            rename: () =>\n                renameFile({\n                    fileId: file.$id,\n                    name,\n                    extension: file.extension,\n                    path,\n                }),\n            share: () => updateFileUser({ fileId: file.$id, emails, path }),\n            delete: () =>\n                deleteFile({\n                    fileId: file.$id,\n                    path,\n                    bucketFileId: file.bucketFieldId,\n                }),\n        };\n\n        success = await actions[action.value as keyof typeof actions]();\n\n        if (success) closeAllModals();\n\n        setIsLoading(false);\n    };\n\n    const handleClose = () => {\n        setIsModalOpen(false);\n        setIsDropdownOpen(false);\n    };\n\n    const handleRemoveUser = async (email: string) => {\n        const updatedEmails = emails.filter((e) => e !== email);\n\n        const success = await updateFileUser({\n            fileId: file.$id,\n            emails: updatedEmails,\n            path,\n        });\n\n        if (success) setEmails(updatedEmails);\n        closeAllModals();\n    };\n\n    const renderDialogContent = () => {\n        if (!action) return null;\n\n        const { value, label } = action;\n\n        return (\n            <DialogContent className=\"shad-dialog button\">\n                <DialogHeader className=\"flex flex-col gap-3\">\n                    <DialogTitle className=\"text-center text-light-100\">\n                        {label}\n                    </DialogTitle>\n                    {value === \"rename\" && (\n                        <Input\n                            type=\"text\"\n                            className=\"rounded-md\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    )}\n\n                    {value === \"share\" && (\n                        <ShareInput\n                            file={file}\n                            onInputChange={setEmails}\n                            onRemove={handleRemoveUser}\n                        />\n                    )}\n\n                    {value === \"details\" && <FileDetails file={file} />}\n\n                    {value === \"delete\" && (\n                        <p className=\"delete-confirmation\">\n                            Are you sure you want to delete{\" \"}\n                            <span className=\"delete-file-name\">\n                                {file.name}\n                            </span>\n                        </p>\n                    )}\n                </DialogHeader>\n\n                {[\"rename\", \"share\", \"delete\"].includes(value) && (\n                    <DialogFooter className=\"flex flex-col gap-3 md:flex-row\">\n                        <Button\n                            className=\"modal-cancel-button\"\n                            onClick={closeAllModals}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            className=\"modal-submit-button text-white\"\n                            onClick={handleActions}\n                        >\n                            <p className=\"capitalize\">{value}</p>\n\n                            {isLoading && (\n                                <Image\n                                    src=\"/assets/icons/loader.svg\"\n                                    alt=\"loader\"\n                                    width={30}\n                                    height={30}\n                                />\n                            )}\n                        </Button>\n                    </DialogFooter>\n                )}\n            </DialogContent>\n        );\n    };\n\n    return (\n        <Dialog open={isModalOpen} onOpenChange={setIsModalOpen}>\n            <DropdownMenu\n                open={isDropdownOpen}\n                onOpenChange={setIsDropdownOpen}\n            >\n                <DropdownMenuTrigger className=\"shad-no-focus\">\n                    <Image\n                        src=\"/assets/icons/dots.svg\"\n                        alt=\"Menu\"\n                        width={34}\n                        height={34}\n                    />\n                </DropdownMenuTrigger>\n                <DropdownMenuContent>\n                    <DropdownMenuLabel className=\"max-w-[200px] truncate\">\n                        {file.name}\n                    </DropdownMenuLabel>\n                    <DropdownMenuSeparator />\n\n                    {actionsDropdownItems.map((actionItem) => (\n                        <DropdownMenuItem\n                            key={actionItem.value}\n                            className=\"shad-dropdown-item\"\n                            onClick={() => {\n                                setAction(actionItem);\n\n                                if (\n                                    [\n                                        \"rename\",\n                                        \"share\",\n                                        \"delete\",\n                                        \"details\",\n                                    ].includes(actionItem.value)\n                                ) {\n                                    setIsModalOpen(true);\n                                    setIsDropdownOpen(false);\n                                } else {\n                                    handleClose();\n                                }\n                            }}\n                        >\n                            {actionItem.value === \"download\" ? (\n                                <Link\n                                    href={constructDownloadUrl(\n                                        file.bucketFieldId\n                                    )}\n                                    download={file.name}\n                                    className=\"flex items-center gap-2\"\n                                >\n                                    <Image\n                                        src={actionItem.icon}\n                                        alt={actionItem.label}\n                                        width={30}\n                                        height={30}\n                                    />\n\n                                    {actionItem.label}\n                                </Link>\n                            ) : (\n                                <div className=\"flex items-center gap-2\">\n                                    <Image\n                                        src={actionItem.icon}\n                                        alt={actionItem.label}\n                                        width={30}\n                                        height={30}\n                                    />\n\n                                    {actionItem.label}\n                                </div>\n                            )}\n                        </DropdownMenuItem>\n                    ))}\n                </DropdownMenuContent>\n            </DropdownMenu>\n\n            {renderDialogContent()}\n        </Dialog>\n    );\n};\n\nexport default ActionDropdown;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 982, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1013, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1094, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1390, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/Chart.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n    Label,\n    PolarGrid,\n    PolarRadiusAxis,\n    RadialBar,\n    RadialBarChart,\n} from \"recharts\";\n\nimport {\n    Card,\n    CardContent,\n    CardHeader,\n    CardTitle,\n    CardDescription,\n} from \"@/components/ui/card\";\nimport { ChartConfig, ChartContainer } from \"@/components/ui/chart\";\nimport { calculatePercentage, convertFileSize } from \"@/lib/utils\";\n\nconst chartConfig = {\n    size: {\n        label: \"Size\",\n    },\n    used: {\n        label: \"Used\",\n        color: \"white\",\n    },\n} satisfies ChartConfig;\n\nexport const Chart = ({ used = 0 }: { used: number }) => {\n    const chartData = [{ storage: \"used\", used: used, fill: \"var(--color-used)\" }];\n\n    return (\n        <Card className=\"chart\">\n            <CardContent className=\"flex-1 p-0\">\n                <ChartContainer\n                    config={chartConfig}\n                    className=\"chart-container\"\n                >\n                    <RadialBarChart\n                        data={chartData}\n                        startAngle={90}\n                        endAngle={Number(calculatePercentage(used)) + 90}\n                        innerRadius={80}\n                        outerRadius={110}\n                    >\n                        <PolarGrid\n                            gridType=\"circle\"\n                            radialLines={false}\n                            stroke=\"none\"\n                            className=\"polar-grid\"\n                            polarRadius={[86, 74]}\n                        />\n                        <RadialBar\n                            dataKey=\"used\"\n                            background\n                            cornerRadius={10}\n                        />\n                        <PolarRadiusAxis\n                            tick={false}\n                            tickLine={false}\n                            axisLine={false}\n                        >\n                            <Label\n                                content={({ viewBox }) => {\n                                    if (\n                                        viewBox &&\n                                        \"cx\" in viewBox &&\n                                        \"cy\" in viewBox\n                                    ) {\n                                        return (\n                                            <text\n                                                x={viewBox.cx}\n                                                y={viewBox.cy}\n                                                textAnchor=\"middle\"\n                                                dominantBaseline=\"middle\"\n                                            >\n                                                <tspan\n                                                    x={viewBox.cx}\n                                                    y={viewBox.cy}\n                                                    className=\"chart-total-percentage\"\n                                                >\n                                                    {used &&\n                                                    calculatePercentage(used)\n                                                        ? calculatePercentage(\n                                                              used\n                                                          )\n                                                              .toString()\n                                                              .replace(\n                                                                  /^0+/,\n                                                                  \"\"\n                                                              )\n                                                        : \"0\"}\n                                                    %\n                                                </tspan>\n                                                <tspan\n                                                    x={viewBox.cx}\n                                                    y={(viewBox.cy || 0) + 24}\n                                                    className=\"fill-white/70\"\n                                                >\n                                                    Space used\n                                                </tspan>\n                                            </text>\n                                        );\n                                    }\n                                }}\n                            />\n                        </PolarRadiusAxis>\n                    </RadialBarChart>\n                </ChartContainer>\n            </CardContent>\n            <CardHeader className=\"chart-details\">\n                <CardTitle className=\"chart-title\">Available Storage</CardTitle>\n                <CardDescription className=\"chart-description\">\n                    {used ? convertFileSize(used) : \"2GB\"} / 2GB\n                </CardDescription>\n            </CardHeader>\n        </Card>\n    );\n};\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAQA;AAOA;AACA;AAlBA;;;;;;AAoBA,MAAM,cAAc;IAChB,MAAM;QACF,OAAO;IACX;IACA,MAAM;QACF,OAAO;QACP,OAAO;IACX;AACJ;AAEO,MAAM,QAAQ,CAAC,EAAE,OAAO,CAAC,EAAoB;IAChD,MAAM,YAAY;QAAC;YAAE,SAAS;YAAQ,MAAM;YAAM,MAAM;QAAoB;KAAE;IAE9E,qBACI,8OAAC,yHAAA,CAAA,OAAI;QAAC,WAAU;;0BACZ,8OAAC,yHAAA,CAAA,cAAW;gBAAC,WAAU;0BACnB,cAAA,8OAAC,0HAAA,CAAA,iBAAc;oBACX,QAAQ;oBACR,WAAU;8BAEV,cAAA,8OAAC,0JAAA,CAAA,iBAAc;wBACX,MAAM;wBACN,YAAY;wBACZ,UAAU,OAAO,CAAA,GAAA,4GAAA,CAAA,sBAAmB,AAAD,EAAE,SAAS;wBAC9C,aAAa;wBACb,aAAa;;0CAEb,8OAAC,qJAAA,CAAA,YAAS;gCACN,UAAS;gCACT,aAAa;gCACb,QAAO;gCACP,WAAU;gCACV,aAAa;oCAAC;oCAAI;iCAAG;;;;;;0CAEzB,8OAAC,qJAAA,CAAA,YAAS;gCACN,SAAQ;gCACR,UAAU;gCACV,cAAc;;;;;;0CAElB,8OAAC,2JAAA,CAAA,kBAAe;gCACZ,MAAM;gCACN,UAAU;gCACV,UAAU;0CAEV,cAAA,8OAAC,qJAAA,CAAA,QAAK;oCACF,SAAS,CAAC,EAAE,OAAO,EAAE;wCACjB,IACI,WACA,QAAQ,WACR,QAAQ,SACV;4CACE,qBACI,8OAAC;gDACG,GAAG,QAAQ,EAAE;gDACb,GAAG,QAAQ,EAAE;gDACb,YAAW;gDACX,kBAAiB;;kEAEjB,8OAAC;wDACG,GAAG,QAAQ,EAAE;wDACb,GAAG,QAAQ,EAAE;wDACb,WAAU;;4DAET,QACD,CAAA,GAAA,4GAAA,CAAA,sBAAmB,AAAD,EAAE,QACd,CAAA,GAAA,4GAAA,CAAA,sBAAmB,AAAD,EACd,MAEC,QAAQ,GACR,OAAO,CACJ,OACA,MAER;4DAAI;;;;;;;kEAGd,8OAAC;wDACG,GAAG,QAAQ,EAAE;wDACb,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI;wDACvB,WAAU;kEACb;;;;;;;;;;;;wCAKb;oCACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAMpB,8OAAC,yHAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,yHAAA,CAAA,YAAS;wBAAC,WAAU;kCAAc;;;;;;kCACnC,8OAAC,yHAAA,CAAA,kBAAe;wBAAC,WAAU;;4BACtB,OAAO,CAAA,GAAA,4GAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ;4BAAM;;;;;;;;;;;;;;;;;;;AAK1D","debugId":null}}]
}