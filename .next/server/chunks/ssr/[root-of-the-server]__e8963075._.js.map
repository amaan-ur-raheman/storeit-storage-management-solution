{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}\nexport const parseStringify = (value: unknown) =>\n    JSON.parse(JSON.stringify(value));\n\nexport const convertFileToUrl = (file: File) => URL.createObjectURL(file);\n\nexport const convertFileSize = (sizeInBytes: number, digits?: number) => {\n    if (sizeInBytes < 1024) {\n        return sizeInBytes + \" Bytes\"; // Less than 1 KB, show in Bytes\n    } else if (sizeInBytes < 1024 * 1024) {\n        const sizeInKB = sizeInBytes / 1024;\n        return sizeInKB.toFixed(digits || 1) + \" KB\"; // Less than 1 MB, show in KB\n    } else if (sizeInBytes < 1024 * 1024 * 1024) {\n        const sizeInMB = sizeInBytes / (1024 * 1024);\n        return sizeInMB.toFixed(digits || 1) + \" MB\"; // Less than 1 GB, show in MB\n    } else {\n        const sizeInGB = sizeInBytes / (1024 * 1024 * 1024);\n        return sizeInGB.toFixed(digits || 2) + \" GB\"; // 1 GB or more, show in GB\n    }\n};\n\nexport const calculateAngle = (sizeInBytes: number) => {\n    const totalSizeInBytes = 2 * 1024 * 1024 * 1024; // 2GB in bytes\n    const percentage = (sizeInBytes / totalSizeInBytes) * 360;\n    return Number(percentage.toFixed(2));\n};\n\nexport const calculatePercentage = (sizeInBytes: number) => {\n    const totalSizeInBytes = 2 * 1024 * 1024 * 1024; // 2GB in bytes\n    const percentage = (sizeInBytes / totalSizeInBytes) * 100;\n    return Number(percentage.toFixed(1));\n};\n\nexport const getFileType = (fileName: string) => {\n    const extension = fileName.split(\".\").pop()?.toLowerCase();\n\n    if (!extension) return { type: \"other\", extension: \"\" };\n\n    const documentExtensions = [\n        \"pdf\",\n        \"doc\",\n        \"docx\",\n        \"txt\",\n        \"xls\",\n        \"xlsx\",\n        \"csv\",\n        \"rtf\",\n        \"ods\",\n        \"ppt\",\n        \"odp\",\n        \"md\",\n        \"html\",\n        \"htm\",\n        \"epub\",\n        \"pages\",\n        \"fig\",\n        \"psd\",\n        \"ai\",\n        \"indd\",\n        \"xd\",\n        \"sketch\",\n        \"afdesign\",\n        \"afphoto\",\n        \"afphoto\",\n    ];\n    const imageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"svg\", \"webp\"];\n    const videoExtensions = [\"mp4\", \"avi\", \"mov\", \"mkv\", \"webm\"];\n    const audioExtensions = [\"mp3\", \"wav\", \"ogg\", \"flac\"];\n\n    if (documentExtensions.includes(extension))\n        return { type: \"document\", extension };\n    if (imageExtensions.includes(extension))\n        return { type: \"image\", extension };\n    if (videoExtensions.includes(extension))\n        return { type: \"video\", extension };\n    if (audioExtensions.includes(extension))\n        return { type: \"audio\", extension };\n\n    return { type: \"other\", extension };\n};\n\nexport const formatDateTime = (isoString: string | null | undefined) => {\n    if (!isoString) return \"â€”\";\n\n    const date = new Date(isoString);\n\n    // Get hours and adjust for 12-hour format\n    let hours = date.getHours();\n    const minutes = date.getMinutes();\n    const period = hours >= 12 ? \"pm\" : \"am\";\n\n    // Convert hours to 12-hour format\n    hours = hours % 12 || 12;\n\n    // Format the time and date parts\n    const time = `${hours}:${minutes.toString().padStart(2, \"0\")}${period}`;\n    const day = date.getDate();\n    const monthNames = [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n    ];\n    const month = monthNames[date.getMonth()];\n\n    return `${time}, ${day} ${month}`;\n};\n\nexport const getFileIcon = (\n    extension: string | undefined,\n    type: FileType | string\n) => {\n    switch (extension) {\n        // Document\n        case \"pdf\":\n            return \"/assets/icons/file-pdf.svg\";\n        case \"doc\":\n            return \"/assets/icons/file-doc.svg\";\n        case \"docx\":\n            return \"/assets/icons/file-docx.svg\";\n        case \"csv\":\n            return \"/assets/icons/file-csv.svg\";\n        case \"txt\":\n            return \"/assets/icons/file-txt.svg\";\n        case \"xls\":\n        case \"xlsx\":\n            return \"/assets/icons/file-document.svg\";\n        // Image\n        case \"svg\":\n            return \"/assets/icons/file-image.svg\";\n        // Video\n        case \"mkv\":\n        case \"mov\":\n        case \"avi\":\n        case \"wmv\":\n        case \"mp4\":\n        case \"flv\":\n        case \"webm\":\n        case \"m4v\":\n        case \"3gp\":\n            return \"/assets/icons/file-video.svg\";\n        // Audio\n        case \"mp3\":\n        case \"mpeg\":\n        case \"wav\":\n        case \"aac\":\n        case \"flac\":\n        case \"ogg\":\n        case \"wma\":\n        case \"m4a\":\n        case \"aiff\":\n        case \"alac\":\n            return \"/assets/icons/file-audio.svg\";\n\n        default:\n            switch (type) {\n                case \"image\":\n                    return \"/assets/icons/file-image.svg\";\n                case \"document\":\n                    return \"/assets/icons/file-document.svg\";\n                case \"video\":\n                    return \"/assets/icons/file-video.svg\";\n                case \"audio\":\n                    return \"/assets/icons/file-audio.svg\";\n                default:\n                    return \"/assets/icons/file-other.svg\";\n            }\n    }\n};\n\n// APPWRITE URL UTILS\n// Construct appwrite file URL - https://appwrite.io/docs/apis/rest#images\nexport const constructFileUrl = (bucketFileId: string) => {\n    return `${process.env.NEXT_PUBLIC_APPWRITE_ENDPOINT}/storage/buckets/${process.env.NEXT_PUBLIC_APPWRITE_BUCKET}/files/${bucketFileId}/view?project=${process.env.NEXT_PUBLIC_APPWRITE_PROJECT}`;\n};\n\nexport const constructDownloadUrl = (bucketFileId: string) => {\n    return `${process.env.NEXT_PUBLIC_APPWRITE_ENDPOINT}/storage/buckets/${process.env.NEXT_PUBLIC_APPWRITE_BUCKET}/files/${bucketFileId}/download?project=${process.env.NEXT_PUBLIC_APPWRITE_PROJECT}`;\n};\n\n// DASHBOARD UTILS\nexport const getUsageSummary = (totalSpace: any) => {\n    return [\n        {\n            title: \"Documents\",\n            size: totalSpace.document.size,\n            latestDate: totalSpace.document.latestDate,\n            icon: \"/assets/icons/file-document-light.svg\",\n            url: \"/documents\",\n        },\n        {\n            title: \"Images\",\n            size: totalSpace.image.size,\n            latestDate: totalSpace.image.latestDate,\n            icon: \"/assets/icons/file-image-light.svg\",\n            url: \"/images\",\n        },\n        {\n            title: \"Media\",\n            size: totalSpace.video.size + totalSpace.audio.size,\n            latestDate:\n                totalSpace.video.latestDate > totalSpace.audio.latestDate\n                    ? totalSpace.video.latestDate\n                    : totalSpace.audio.latestDate,\n            icon: \"/assets/icons/file-video-light.svg\",\n            url: \"/media\",\n        },\n        {\n            title: \"Others\",\n            size: totalSpace.other.size,\n            latestDate: totalSpace.other.latestDate,\n            icon: \"/assets/icons/file-other-light.svg\",\n            url: \"/others\",\n        },\n    ];\n};\n\nexport const getFileTypesParams = (type: string) => {\n    switch (type) {\n        case \"documents\":\n            return [\"document\"];\n        case \"images\":\n            return [\"image\"];\n        case \"media\":\n            return [\"video\", \"audio\"];\n        case \"others\":\n            return [\"other\"];\n        default:\n            return [\"document\"];\n    }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8VACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/file.action.ts"],"sourcesContent":["\"use server\";\n\nimport { createAdminClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const uploadFile = async ({\n    file,\n    ownerId,\n    accountId,\n    path,\n}: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n\n        const bucketFile = await storage.createFile(\n            appwriteConfig.bucketId,\n            ID.unique(),\n            inputFile\n        );\n\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId: accountId,\n            users: [],\n            bucketFieldId: bucketFile.$id,\n        };\n\n        const newFile = await databases\n            .createDocument(\n                appwriteConfig.databaseId,\n                appwriteConfig.filesCollectionId,\n                ID.unique(),\n                fileDocument\n            )\n            .catch(async (error: unknown) => {\n                await storage.deleteFile(\n                    appwriteConfig.bucketId,\n                    bucketFile.$id\n                );\n                handleError(error, \"Failed to create file document\");\n            });\n\n        revalidatePath(path);\n\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file.\");\n    }\n};\n\nconst createQueries = (\n    currentUser: Models.Document,\n    types: string[],\n    searchText: string,\n    sort: string,\n    limit?: number\n) => {\n    const queries = [\n        Query.or([\n            Query.equal(\"owner\", [currentUser.$id]),\n            Query.contains(\"users\", [currentUser.email]),\n        ]),\n    ];\n\n    if (types.length > 0) queries.push(Query.equal(\"type\", types));\n    if (searchText) queries.push(Query.contains(\"name\", searchText));\n    if (limit) queries.push(Query.limit(limit));\n\n    if (sort) {\n        const [sortBy, orderBy] = sort.split(\"-\");\n\n        queries.push(\n            orderBy === \"asc\" ? Query.orderAsc(sortBy) : Query.orderDesc(sortBy)\n        );\n    }\n\n    return queries;\n};\n\nexport const getFiles = async ({\n    types = [],\n    searchText = \"\",\n    sort = \"$createdAt-desc\",\n    limit,\n}: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n\n        if (!currentUser) throw new Error(\"User not found\");\n\n        const queries = createQueries(\n            currentUser,\n            types,\n            searchText,\n            sort,\n            limit\n        );\n\n        console.log({ currentUser, queries });\n\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            queries\n        );\n\n        console.log({ files });\n\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n};\n\nexport const renameFile = async ({\n    fileId,\n    name,\n    extension,\n    path,\n}: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const newName = `${name}.${extension}`;\n\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const updateFileUser = async ({\n    fileId,\n    emails,\n    path,\n}: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                users: emails,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const deleteFile = async ({\n    fileId,\n    bucketFileId,\n    path,\n}: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify({ status: \"success\" });\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n"],"names":[],"mappings":";;;;;;IAgGa,WAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/Thumbnail.tsx"],"sourcesContent":["import { cn, getFileIcon } from \"@/lib/utils\";\nimport Image from \"next/image\";\nimport React from \"react\";\n\ninterface Props {\n    type: string;\n    extension: string;\n    url?: string;\n    imageClassName?: string;\n    className?: string;\n}\n\nconst Thumbnail = ({\n    type,\n    extension,\n    url = \"\",\n    imageClassName,\n    className,\n}: Props) => {\n    const isImage = type === \"image\" && extension !== \"svg\";\n\n    return (\n        <figure className={cn(\"thumbnail\", className)}>\n            <Image\n                src={isImage ? url : getFileIcon(extension, type)}\n                alt=\"Thumbnail\"\n                width={100}\n                height={100}\n                className={cn(\n                    \"siz-8 object-contain\",\n                    imageClassName,\n                    isImage && \"thumbnail-image\"\n                )}\n            />\n        </figure>\n    );\n};\n\nexport default Thumbnail;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAWA,MAAM,YAAY,CAAC,EACf,IAAI,EACJ,SAAS,EACT,MAAM,EAAE,EACR,cAAc,EACd,SAAS,EACL;IACJ,MAAM,UAAU,SAAS,WAAW,cAAc;IAElD,qBACI,8OAAC;QAAO,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,aAAa;kBAC/B,cAAA,8OAAC,6HAAA,CAAA,UAAK;YACF,KAAK,UAAU,MAAM,CAAA,GAAA,4GAAA,CAAA,cAAW,AAAD,EAAE,WAAW;YAC5C,KAAI;YACJ,OAAO;YACP,QAAQ;YACR,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACR,wBACA,gBACA,WAAW;;;;;;;;;;;AAK/B;uCAEe","debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/constants/index.ts"],"sourcesContent":["export const navItems = [\n  {\n    name: 'Dashboard',\n    icon: '/assets/icons/dashboard.svg',\n    url: '/',\n  },\n  {\n    name: 'Documents',\n    icon: '/assets/icons/documents.svg',\n    url: '/documents',\n  },\n  {\n    name: 'Images',\n    icon: '/assets/icons/images.svg',\n    url: '/images',\n  },\n  {\n    name: 'Media',\n    icon: '/assets/icons/video.svg',\n    url: '/media',\n  },\n  {\n    name: 'Others',\n    icon: '/assets/icons/others.svg',\n    url: '/others',\n  },\n];\n\nexport const actionsDropdownItems = [\n  {\n    label: 'Rename',\n    icon: '/assets/icons/edit.svg',\n    value: 'rename',\n  },\n  {\n    label: 'Details',\n    icon: '/assets/icons/info.svg',\n    value: 'details',\n  },\n  {\n    label: 'Share',\n    icon: '/assets/icons/share.svg',\n    value: 'share',\n  },\n  {\n    label: 'Download',\n    icon: '/assets/icons/download.svg',\n    value: 'download',\n  },\n  {\n    label: 'Delete',\n    icon: '/assets/icons/delete.svg',\n    value: 'delete',\n  },\n];\n\nexport const sortTypes = [\n  {\n    label: 'Date created (newest)',\n    value: '$createdAt-desc',\n  },\n  {\n    label: 'Created Date (oldest)',\n    value: '$createdAt-asc',\n  },\n  {\n    label: 'Name (A-Z)',\n    value: 'name-asc',\n  },\n  {\n    label: 'Name (Z-A)',\n    value: 'name-desc',\n  },\n  {\n    label: 'Size (Highest)',\n    value: 'size-desc',\n  },\n  {\n    label: 'Size (Lowest)',\n    value: 'size-asc',\n  },\n];\n\nexport const MAX_FILE_SIZE = 50 * 1024 * 1024; // 50MB\nexport const avatarPlaceholderUrl = \"https://img.freepik.com/free-psd/3d-illustration-person-with-sunglasses_23-2149436188.jpg?semt=ais_hybrid&w=740\""],"names":[],"mappings":";;;;;;;AAAO,MAAM,WAAW;IACtB;QACE,MAAM;QACN,MAAM;QACN,KAAK;IACP;IACA;QACE,MAAM;QACN,MAAM;QACN,KAAK;IACP;IACA;QACE,MAAM;QACN,MAAM;QACN,KAAK;IACP;IACA;QACE,MAAM;QACN,MAAM;QACN,KAAK;IACP;IACA;QACE,MAAM;QACN,MAAM;QACN,KAAK;IACP;CACD;AAEM,MAAM,uBAAuB;IAClC;QACE,OAAO;QACP,MAAM;QACN,OAAO;IACT;IACA;QACE,OAAO;QACP,MAAM;QACN,OAAO;IACT;IACA;QACE,OAAO;QACP,MAAM;QACN,OAAO;IACT;IACA;QACE,OAAO;QACP,MAAM;QACN,OAAO;IACT;IACA;QACE,OAAO;QACP,MAAM;QACN,OAAO;IACT;CACD;AAEM,MAAM,YAAY;IACvB;QACE,OAAO;QACP,OAAO;IACT;IACA;QACE,OAAO;QACP,OAAO;IACT;IACA;QACE,OAAO;QACP,OAAO;IACT;IACA;QACE,OAAO;QACP,OAAO;IACT;IACA;QACE,OAAO;QACP,OAAO;IACT;IACA;QACE,OAAO;QACP,OAAO;IACT;CACD;AAEM,MAAM,gBAAgB,KAAK,OAAO,MAAM,OAAO;AAC/C,MAAM,uBAAuB","debugId":null}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/file.action.ts"],"sourcesContent":["\"use server\";\n\nimport { createAdminClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const uploadFile = async ({\n    file,\n    ownerId,\n    accountId,\n    path,\n}: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n\n        const bucketFile = await storage.createFile(\n            appwriteConfig.bucketId,\n            ID.unique(),\n            inputFile\n        );\n\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId: accountId,\n            users: [],\n            bucketFieldId: bucketFile.$id,\n        };\n\n        const newFile = await databases\n            .createDocument(\n                appwriteConfig.databaseId,\n                appwriteConfig.filesCollectionId,\n                ID.unique(),\n                fileDocument\n            )\n            .catch(async (error: unknown) => {\n                await storage.deleteFile(\n                    appwriteConfig.bucketId,\n                    bucketFile.$id\n                );\n                handleError(error, \"Failed to create file document\");\n            });\n\n        revalidatePath(path);\n\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file.\");\n    }\n};\n\nconst createQueries = (\n    currentUser: Models.Document,\n    types: string[],\n    searchText: string,\n    sort: string,\n    limit?: number\n) => {\n    const queries = [\n        Query.or([\n            Query.equal(\"owner\", [currentUser.$id]),\n            Query.contains(\"users\", [currentUser.email]),\n        ]),\n    ];\n\n    if (types.length > 0) queries.push(Query.equal(\"type\", types));\n    if (searchText) queries.push(Query.contains(\"name\", searchText));\n    if (limit) queries.push(Query.limit(limit));\n\n    if (sort) {\n        const [sortBy, orderBy] = sort.split(\"-\");\n\n        queries.push(\n            orderBy === \"asc\" ? Query.orderAsc(sortBy) : Query.orderDesc(sortBy)\n        );\n    }\n\n    return queries;\n};\n\nexport const getFiles = async ({\n    types = [],\n    searchText = \"\",\n    sort = \"$createdAt-desc\",\n    limit,\n}: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n\n        if (!currentUser) throw new Error(\"User not found\");\n\n        const queries = createQueries(\n            currentUser,\n            types,\n            searchText,\n            sort,\n            limit\n        );\n\n        console.log({ currentUser, queries });\n\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            queries\n        );\n\n        console.log({ files });\n\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n};\n\nexport const renameFile = async ({\n    fileId,\n    name,\n    extension,\n    path,\n}: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const newName = `${name}.${extension}`;\n\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const updateFileUser = async ({\n    fileId,\n    emails,\n    path,\n}: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                users: emails,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const deleteFile = async ({\n    fileId,\n    bucketFileId,\n    path,\n}: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify({ status: \"success\" });\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n"],"names":[],"mappings":";;;;;;IAea,aAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/FileUploader.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useCallback, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Button } from \"./ui/button\";\nimport { cn, convertFileToUrl, getFileType } from \"@/lib/utils\";\nimport Image from \"next/image\";\nimport Thumbnail from \"./Thumbnail\";\nimport { MAX_FILE_SIZE } from \"@/constants\";\nimport { toast } from \"sonner\";\nimport { uploadFile } from \"@/lib/actions/file.action\";\nimport { usePathname } from \"next/navigation\";\n\ninterface Props {\n    ownerId: string;\n    accountId: string;\n    className?: string;\n}\n\nconst FileUploader = ({ ownerId, accountId, className }: Props) => {\n    const path = usePathname();\n    const [files, setFiles] = useState<File[]>([]);\n\n    const onDrop = useCallback(\n        async (acceptedFiles: File[]) => {\n            // Do something with the files\n            setFiles(acceptedFiles);\n\n            const uploadPromises = acceptedFiles.map((file) => {\n                if (file.size > MAX_FILE_SIZE) {\n                    setFiles((prevFiles) =>\n                        prevFiles.filter((f) => f.name !== file.name)\n                    );\n\n                    return toast(\"Error\", {\n                        description: (\n                            <p className=\"text-white body-2\">\n                                <span className=\"font-semibold\">\n                                    {file.name}\n                                </span>{\" \"}\n                                is too large. Max file size is 50MB.\n                            </p>\n                        ),\n                        className: \"error-toast\",\n                    });\n                }\n\n                return uploadFile({ file, ownerId, accountId, path }).then(\n                    (uploadedFile) => {\n                        if (uploadedFile) {\n                            setFiles((prevFiles) =>\n                                prevFiles.filter((f) => f.name !== file.name)\n                            );\n                        }\n                    }\n                );\n            });\n\n            await Promise.all(uploadPromises);\n        },\n        [ownerId, accountId, path]\n    );\n\n    const { getRootProps, getInputProps } = useDropzone({\n        onDrop,\n    });\n\n    const handleRemoveFile = (\n        e: React.MouseEvent<HTMLImageElement, MouseEvent>,\n        fileName: string\n    ) => {\n        e.stopPropagation();\n        setFiles((prevFiles) =>\n            prevFiles.filter((file) => file.name !== fileName)\n        );\n    };\n\n    return (\n        <div {...getRootProps()} className=\"cursor-pointer\">\n            <input {...getInputProps()} />\n            <Button type=\"button\" className={cn(\"uploader-button\", className)}>\n                <Image\n                    src=\"/assets/icons/upload.svg\"\n                    alt=\"upload\"\n                    width={24}\n                    height={24}\n                />{\" \"}\n                <p className=\"text-white\">Upload</p>\n            </Button>\n\n            {files.length > 0 && (\n                <ul className=\"uploader-preview-list\">\n                    <h4 className=\"h4 text-light-100\">Uploading</h4>\n\n                    {files.map((file, index) => {\n                        const { type, extension } = getFileType(file.name);\n\n                        return (\n                            <li\n                                key={`${file.name}-${index}`}\n                                className=\"uploader-preview-item\"\n                            >\n                                <div className=\"flex items-center gap-3\">\n                                    <Thumbnail\n                                        type={type}\n                                        extension={extension}\n                                        url={convertFileToUrl(file)}\n                                    />\n\n                                    <div className=\"preview-item-name\">\n                                        {file.name}\n                                        <Image\n                                            src=\"/assets/icons/file-loader.gif\"\n                                            alt=\"Loader\"\n                                            width={80}\n                                            height={26}\n                                        />\n                                    </div>\n                                </div>\n\n                                <Image\n                                    src=\"/assets/icons/remove.svg\"\n                                    alt=\"Remove\"\n                                    width={24}\n                                    height={24}\n                                    onClick={(e) =>\n                                        handleRemoveFile(e, file.name)\n                                    }\n                                />\n                            </li>\n                        );\n                    })}\n                </ul>\n            )}\n        </div>\n    );\n\n};\n\nexport default FileUploader;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 789, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/sheet.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n      {children}\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQA,MAAM,QAAQ,kKAAA,CAAA,OAAmB;AAEjC,MAAM,eAAe,kKAAA,CAAA,UAAsB;AAE3C,MAAM,aAAa,kKAAA,CAAA,QAAoB;AAEvC,MAAM,cAAc,kKAAA,CAAA,SAAqB;AAEzC,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAsB;QACrB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,aAAa,WAAW,GAAG,kKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,oMACA;IACE,UAAU;QACR,MAAM;YACJ,KAAK;YACL,QACE;YACF,MAAM;YACN,OACE;QACJ;IACF;IACA,iBAAiB;QACf,MAAM;IACR;AACF;AAOF,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,OAAO,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAsB;gBACrB,KAAK;gBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;oBAAE;gBAAK,IAAI;gBACtC,GAAG,KAAK;;kCAET,8OAAC,kKAAA,CAAA,QAAoB;wBAAC,WAAU;;0CAC9B,8OAAC,gLAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;0CACtB,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;oBAE3B;;;;;;;;;;;;;AAIP,aAAa,WAAW,GAAG,kKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;QACtD,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,kKAAA,CAAA,QAAoB,CAAC,WAAW;AAEzD,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,kKAAA,CAAA,cAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 938, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/user.actions.ts"],"sourcesContent":["\"use server\";\n\nimport { ID, Query } from \"node-appwrite\";\nimport { createAdminClient, createSessionClient } from \"../appwrite\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { parseStringify } from \"../utils\";\nimport { cookies } from \"next/headers\";\nimport { avatarPlaceholderUrl } from \"@/constants\";\nimport { redirect } from \"next/navigation\";\n\nconst getUserByEmail = async (email: string) => {\n    const { databases } = await createAdminClient();\n\n    const result = await databases.listDocuments(\n        appwriteConfig.databaseId,\n        appwriteConfig.usersCollectionId,\n        [Query.equal(\"email\", [email])]\n    );\n\n    return result.total > 0 ? result.documents[0] : null;\n};\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const sendEmailOTP = async ({ email }: { email: string }) => {\n    const { account } = await createAdminClient();\n\n    try {\n        const session = await account.createEmailToken(ID.unique(), email);\n\n        return session.userId;\n    } catch (error) {\n        handleError(error, \"Failed to send email OTP\");\n    }\n};\n\nexport const createAccount = async ({\n    fullName,\n    email,\n}: {\n    fullName: string;\n    email: string;\n}) => {\n    const existingUser = await getUserByEmail(email);\n\n    const accountId = await sendEmailOTP({ email });\n    if (!accountId) throw new Error(\"Failed to send an OTP\");\n\n    if (!existingUser) {\n        const { databases } = await createAdminClient();\n\n        await databases.createDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.usersCollectionId,\n            ID.unique(),\n            {\n                fullName,\n                email,\n                avatar: avatarPlaceholderUrl,\n                accountId,\n            }\n        );\n    }\n\n    return parseStringify({ accountId });\n};\n\nexport const verifySecret = async ({\n    accountId,\n    password,\n}: {\n    accountId: string;\n    password: string;\n}) => {\n    try {\n        const { account } = await createAdminClient();\n\n        const session = await account.createSession(accountId, password);\n\n        (await cookies()).set(\"appwrite-session\", session.secret, {\n            path: \"/\",\n            httpOnly: true,\n            sameSite: \"strict\",\n            secure: true,\n        });\n\n        return parseStringify({ sessionId: session.$id });\n    } catch (error) {\n        handleError(error, \"Failed to verify OTP.\");\n    }\n};\n\nexport const getCurrentUser = async () => {\n    const { account, databases } = await createSessionClient();\n\n    const result = await account.get();\n\n    const user = await databases.listDocuments(\n        appwriteConfig.databaseId,\n        appwriteConfig.usersCollectionId,\n        [Query.equal(\"accountId\", result.$id)]\n    );\n\n    if (user.total <= 0) return null;\n\n    return parseStringify(user.documents[0]);\n};\n\nexport const signOutUser = async () => {\n    const { account } = await createSessionClient();\n\n    try {\n        await account.deleteSession(\"current\");\n        (await cookies()).delete(\"appwrite-session\");\n    } catch (error) {\n        handleError(error, \"Failed to sign out user\");\n    } finally {\n        redirect(\"/sign-in\");\n    }\n};\n\nexport const signInUser = async ({ email }: { email: string }) => {\n    try {\n        const existingUser = await getUserByEmail(email);\n\n        // User exits, send OTP\n        if (existingUser) {\n           await sendEmailOTP({email});\n           return parseStringify({ accountId: existingUser.accountId });\n        }\n\n        return parseStringify({ accountId: null, error: \"User not found\" })\n    } catch(error) {\n        handleError(error, \"Failed to sign in user\")\n    }\n};\n"],"names":[],"mappings":";;;;;;IA+Ga,cAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 951, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/MobileNavigation.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport {\n    Sheet,\n    SheetContent,\n    SheetDescription,\n    SheetHeader,\n    SheetTitle,\n    SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport Image from \"next/image\";\nimport { usePathname } from \"next/navigation\";\nimport { Separator } from \"@radix-ui/react-separator\";\nimport { navItems } from \"@/constants\";\nimport Link from \"next/link\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"./ui/button\";\nimport FileUploader from \"./FileUploader\";\nimport { signOutUser } from \"@/lib/actions/user.actions\";\n\ninterface Props {\n    $id: string;\n    accountId: string;\n    fullName: string;\n    email: string;\n    avatar: string;\n}\n\nconst MobileNavigation = ({\n    $id: ownerId,\n    accountId,\n    fullName,\n    email,\n    avatar,\n}: Props) => {\n    const [open, setOpen] = useState(false);\n    const pathname = usePathname();\n\n    return (\n        <header className=\"mobile-header\">\n            <Image\n                src=\"/assets/icons/logo-full-brand.svg\"\n                alt=\"logo\"\n                width={120}\n                height={52}\n                className=\"h-auto\"\n            />\n\n            <Sheet open={open} onOpenChange={setOpen}>\n                <SheetTrigger>\n                    <Image\n                        src=\"/assets/icons/menu.svg\"\n                        alt=\"menu\"\n                        width={30}\n                        height={30}\n                    />\n                </SheetTrigger>\n                <SheetContent className=\"shad-sheet h-screen px-3\">\n                    <SheetTitle>\n                        <div className=\"header-user\">\n                            <Image\n                                src={avatar}\n                                alt=\"avatar\"\n                                width={44}\n                                height={44}\n                                className=\"header-user-avatar\"\n                            />\n\n                            <div className=\"sm:hidden lg:block\">\n                                <p className=\"subtitle-2 capitalize\">\n                                    {fullName}\n                                </p>\n                                <p className=\"caption\">{email}</p>\n                            </div>\n                        </div>\n\n                        <Separator className=\"mb-4 bg-light-200/20\" />\n                    </SheetTitle>\n                    <nav className=\"mobile-nav\">\n                        <ul className=\"mobile-nav-list\">\n                            {navItems.map(({ url, name, icon }) => (\n                                <Link\n                                    key={name}\n                                    href={url}\n                                    className=\"lg:w-full\"\n                                >\n                                    <li\n                                        className={cn(\n                                            \"mobile-nav-item\",\n                                            pathname === url && \"shad-active\"\n                                        )}\n                                    >\n                                        <Image\n                                            src={icon}\n                                            alt=\"icon\"\n                                            width={24}\n                                            height={24}\n                                            className={cn(\n                                                \"nav-icon\",\n                                                pathname === url &&\n                                                    \"nav-icon-active\"\n                                            )}\n                                        />\n                                        <p>{name}</p>\n                                    </li>\n                                </Link>\n                            ))}\n                        </ul>\n                    </nav>\n\n                    <Separator className=\"my-5 bg-light-200/20\" />\n\n                    <div className=\"flex flex-col justify-between gap-5 pb-5\">\n                        <FileUploader accountId={accountId} ownerId={ownerId} />\n\n                        <Button type=\"submit\" className=\"mobile-sign-out-button\" onClick={async () => await signOutUser()}>\n                            <Image\n                                src=\"assets/icons/logout.svg\"\n                                alt=\"logout button\"\n                                width={24}\n                                height={24}\n                            />\n\n                            <p>Logout</p>\n                        </Button>\n                    </div>\n                </SheetContent>\n            </Sheet>\n        </header>\n    );\n};\n\nexport default MobileNavigation;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;;;;;;;;;;;;;AA6BA,MAAM,mBAAmB,CAAC,EACtB,KAAK,OAAO,EACZ,SAAS,EACT,QAAQ,EACR,KAAK,EACL,MAAM,EACF;IACJ,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,qBACI,8OAAC;QAAO,WAAU;;0BACd,8OAAC,6HAAA,CAAA,UAAK;gBACF,KAAI;gBACJ,KAAI;gBACJ,OAAO;gBACP,QAAQ;gBACR,WAAU;;;;;;0BAGd,8OAAC,0HAAA,CAAA,QAAK;gBAAC,MAAM;gBAAM,cAAc;;kCAC7B,8OAAC,0HAAA,CAAA,eAAY;kCACT,cAAA,8OAAC,6HAAA,CAAA,UAAK;4BACF,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;;;;;;;;;;;kCAGhB,8OAAC,0HAAA,CAAA,eAAY;wBAAC,WAAU;;0CACpB,8OAAC,0HAAA,CAAA,aAAU;;kDACP,8OAAC;wCAAI,WAAU;;0DACX,8OAAC,6HAAA,CAAA,UAAK;gDACF,KAAK;gDACL,KAAI;gDACJ,OAAO;gDACP,QAAQ;gDACR,WAAU;;;;;;0DAGd,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAE,WAAU;kEACR;;;;;;kEAEL,8OAAC;wDAAE,WAAU;kEAAW;;;;;;;;;;;;;;;;;;kDAIhC,8OAAC,qKAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;;;;;;;0CAEzB,8OAAC;gCAAI,WAAU;0CACX,cAAA,8OAAC;oCAAG,WAAU;8CACT,kHAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,iBAC9B,8OAAC,4JAAA,CAAA,UAAI;4CAED,MAAM;4CACN,WAAU;sDAEV,cAAA,8OAAC;gDACG,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACR,mBACA,aAAa,OAAO;;kEAGxB,8OAAC,6HAAA,CAAA,UAAK;wDACF,KAAK;wDACL,KAAI;wDACJ,OAAO;wDACP,QAAQ;wDACR,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACR,YACA,aAAa,OACT;;;;;;kEAGZ,8OAAC;kEAAG;;;;;;;;;;;;2CArBH;;;;;;;;;;;;;;;0CA4BrB,8OAAC,qKAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CAErB,8OAAC;gCAAI,WAAU;;kDACX,8OAAC,2HAAA,CAAA,UAAY;wCAAC,WAAW;wCAAW,SAAS;;;;;;kDAE7C,8OAAC,2HAAA,CAAA,SAAM;wCAAC,MAAK;wCAAS,WAAU;wCAAyB,SAAS,UAAY,MAAM,CAAA,GAAA,sJAAA,CAAA,cAAW,AAAD;;0DAC1F,8OAAC,6HAAA,CAAA,UAAK;gDACF,KAAI;gDACJ,KAAI;gDACJ,OAAO;gDACP,QAAQ;;;;;;0DAGZ,8OAAC;0DAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO/B;uCAEe","debugId":null}},
    {"offset": {"line": 1206, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/Sidebar.tsx"],"sourcesContent":["\"use client\";\n\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport { avatarPlaceholderUrl, navItems } from \"../constants/index\";\nimport { usePathname } from \"next/navigation\";\nimport { cn } from \"@/lib/utils\";\n\ninterface Props {\n    fullName: string;\n    email: string;\n    avatar: string;\n}\n\nconst Sidebar = ({ fullName, email, avatar }: Props) => {\n    const pathname = usePathname();\n\n    return (\n        <aside className=\"sidebar\">\n            <Link href=\"/\">\n                <Image\n                    src=\"/assets/icons/logo-full-brand.svg\"\n                    alt=\"logo\"\n                    width={160}\n                    height={50}\n                    className=\"hidden h-auto lg:block\"\n                />\n\n                <Image\n                    src=\"/assets/icons/logo-brand.svg\"\n                    alt=\"logo\"\n                    width={52}\n                    height={52}\n                    className=\"lg:hidden\"\n                />\n            </Link>\n\n            <nav className=\"sidebar-nav\">\n                <ul className=\"flex flex-1 flex-col gap-6\">\n                    {navItems.map(({ url, name, icon }) => (\n                        <Link key={name} href={url} className=\"lg:w-full\">\n                            <li className={cn(\"sidebar-nav-item\", pathname === url && \"shad-active\")}>\n                                <Image src={icon} alt=\"icon\" width={24} height={24} className={cn(\"nav-icon\", pathname === url && \"nav-icon-active\")} />\n                                <p className=\"hidden lg:block\">{name}</p>\n                            </li>\n                        </Link>\n                    ))}\n                </ul>\n            </nav>\n\n            <Image src=\"/assets/images/files-2.png\" alt=\"logo\" width={506} height={418} className=\"w-full\" />\n\n            <div className=\"sidebar-user-info\">\n                <Image src={avatar} alt=\"Avatar\" width={44} height={44} className=\"sidebar-user-avatar\" />\n                <div className=\"hidden w-full lg:block min-w-0\">\n                    <p className=\"subtitle-2 capitalize\">{fullName}</p>\n                    <p className=\"caption truncate\">{email}</p>\n                </div>\n            </div>\n        </aside>\n    );\n};\n\nexport default Sidebar;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AACA;AAPA;;;;;;;AAeA,MAAM,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAS;IAC/C,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,qBACI,8OAAC;QAAM,WAAU;;0BACb,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAK;;kCACP,8OAAC,6HAAA,CAAA,UAAK;wBACF,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;kCAGd,8OAAC,6HAAA,CAAA,UAAK;wBACF,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;;;;;;;0BAIlB,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAG,WAAU;8BACT,kHAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,iBAC9B,8OAAC,4JAAA,CAAA,UAAI;4BAAY,MAAM;4BAAK,WAAU;sCAClC,cAAA,8OAAC;gCAAG,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,oBAAoB,aAAa,OAAO;;kDACtD,8OAAC,6HAAA,CAAA,UAAK;wCAAC,KAAK;wCAAM,KAAI;wCAAO,OAAO;wCAAI,QAAQ;wCAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY,aAAa,OAAO;;;;;;kDAClG,8OAAC;wCAAE,WAAU;kDAAmB;;;;;;;;;;;;2BAH7B;;;;;;;;;;;;;;;0BAUvB,8OAAC,6HAAA,CAAA,UAAK;gBAAC,KAAI;gBAA6B,KAAI;gBAAO,OAAO;gBAAK,QAAQ;gBAAK,WAAU;;;;;;0BAEtF,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAK;wBAAQ,KAAI;wBAAS,OAAO;wBAAI,QAAQ;wBAAI,WAAU;;;;;;kCAClE,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAE,WAAU;0CAAyB;;;;;;0CACtC,8OAAC;gCAAE,WAAU;0CAAoB;;;;;;;;;;;;;;;;;;;;;;;;AAKrD;uCAEe","debugId":null}},
    {"offset": {"line": 1378, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAOA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,8OAAC,wIAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,cAAc;YACZ,YAAY;gBACV,OACE;gBACF,aAAa;gBACb,cACE;gBACF,cACE;YACJ;QACF;QACC,GAAG,KAAK;;;;;;AAGf","debugId":null}}]
}