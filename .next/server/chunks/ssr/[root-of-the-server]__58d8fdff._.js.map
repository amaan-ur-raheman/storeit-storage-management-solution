{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}\nexport const parseStringify = (value: unknown) =>\n    JSON.parse(JSON.stringify(value));\n\nexport const convertFileToUrl = (file: File) => URL.createObjectURL(file);\n\nexport const convertFileSize = (sizeInBytes: number, digits?: number) => {\n    if (sizeInBytes < 1024) {\n        return sizeInBytes + \" Bytes\"; // Less than 1 KB, show in Bytes\n    } else if (sizeInBytes < 1024 * 1024) {\n        const sizeInKB = sizeInBytes / 1024;\n        return sizeInKB.toFixed(digits || 1) + \" KB\"; // Less than 1 MB, show in KB\n    } else if (sizeInBytes < 1024 * 1024 * 1024) {\n        const sizeInMB = sizeInBytes / (1024 * 1024);\n        return sizeInMB.toFixed(digits || 1) + \" MB\"; // Less than 1 GB, show in MB\n    } else {\n        const sizeInGB = sizeInBytes / (1024 * 1024 * 1024);\n        return sizeInGB.toFixed(digits || 2) + \" GB\"; // 1 GB or more, show in GB\n    }\n};\n\nexport const calculateAngle = (sizeInBytes: number) => {\n    const totalSizeInBytes = 2 * 1024 * 1024 * 1024; // 2GB in bytes\n    const percentage = (sizeInBytes / totalSizeInBytes) * 360;\n    return Number(percentage.toFixed(2));\n};\n\nexport const calculatePercentage = (sizeInBytes: number) => {\n    const totalSizeInBytes = 2 * 1024 * 1024 * 1024; // 2GB in bytes\n    const percentage = (sizeInBytes / totalSizeInBytes) * 100;\n    return Number(percentage.toFixed(1));\n};\n\nexport const getFileType = (fileName: string) => {\n    const extension = fileName.split(\".\").pop()?.toLowerCase();\n\n    if (!extension) return { type: \"other\", extension: \"\" };\n\n    const documentExtensions = [\n        \"pdf\",\n        \"doc\",\n        \"docx\",\n        \"txt\",\n        \"xls\",\n        \"xlsx\",\n        \"csv\",\n        \"rtf\",\n        \"ods\",\n        \"ppt\",\n        \"odp\",\n        \"md\",\n        \"html\",\n        \"htm\",\n        \"epub\",\n        \"pages\",\n        \"fig\",\n        \"psd\",\n        \"ai\",\n        \"indd\",\n        \"xd\",\n        \"sketch\",\n        \"afdesign\",\n        \"afphoto\",\n        \"afphoto\",\n    ];\n    const imageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"svg\", \"webp\"];\n    const videoExtensions = [\"mp4\", \"avi\", \"mov\", \"mkv\", \"webm\"];\n    const audioExtensions = [\"mp3\", \"wav\", \"ogg\", \"flac\"];\n\n    if (documentExtensions.includes(extension))\n        return { type: \"document\", extension };\n    if (imageExtensions.includes(extension))\n        return { type: \"image\", extension };\n    if (videoExtensions.includes(extension))\n        return { type: \"video\", extension };\n    if (audioExtensions.includes(extension))\n        return { type: \"audio\", extension };\n\n    return { type: \"other\", extension };\n};\n\nexport const formatDateTime = (isoString: string | null | undefined) => {\n    if (!isoString) return \"â€”\";\n\n    const date = new Date(isoString);\n\n    // Get hours and adjust for 12-hour format\n    let hours = date.getHours();\n    const minutes = date.getMinutes();\n    const period = hours >= 12 ? \"pm\" : \"am\";\n\n    // Convert hours to 12-hour format\n    hours = hours % 12 || 12;\n\n    // Format the time and date parts\n    const time = `${hours}:${minutes.toString().padStart(2, \"0\")}${period}`;\n    const day = date.getDate();\n    const monthNames = [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n    ];\n    const month = monthNames[date.getMonth()];\n\n    return `${time}, ${day} ${month}`;\n};\n\nexport const getFileIcon = (\n    extension: string | undefined,\n    type: FileType | string\n) => {\n    switch (extension) {\n        // Document\n        case \"pdf\":\n            return \"/assets/icons/file-pdf.svg\";\n        case \"doc\":\n            return \"/assets/icons/file-doc.svg\";\n        case \"docx\":\n            return \"/assets/icons/file-docx.svg\";\n        case \"csv\":\n            return \"/assets/icons/file-csv.svg\";\n        case \"txt\":\n            return \"/assets/icons/file-txt.svg\";\n        case \"xls\":\n        case \"xlsx\":\n            return \"/assets/icons/file-document.svg\";\n        // Image\n        case \"svg\":\n            return \"/assets/icons/file-image.svg\";\n        // Video\n        case \"mkv\":\n        case \"mov\":\n        case \"avi\":\n        case \"wmv\":\n        case \"mp4\":\n        case \"flv\":\n        case \"webm\":\n        case \"m4v\":\n        case \"3gp\":\n            return \"/assets/icons/file-video.svg\";\n        // Audio\n        case \"mp3\":\n        case \"mpeg\":\n        case \"wav\":\n        case \"aac\":\n        case \"flac\":\n        case \"ogg\":\n        case \"wma\":\n        case \"m4a\":\n        case \"aiff\":\n        case \"alac\":\n            return \"/assets/icons/file-audio.svg\";\n\n        default:\n            switch (type) {\n                case \"image\":\n                    return \"/assets/icons/file-image.svg\";\n                case \"document\":\n                    return \"/assets/icons/file-document.svg\";\n                case \"video\":\n                    return \"/assets/icons/file-video.svg\";\n                case \"audio\":\n                    return \"/assets/icons/file-audio.svg\";\n                default:\n                    return \"/assets/icons/file-other.svg\";\n            }\n    }\n};\n\n// APPWRITE URL UTILS\n// Construct appwrite file URL - https://appwrite.io/docs/apis/rest#images\nexport const constructFileUrl = (bucketFileId: string) => {\n    return `${process.env.NEXT_PUBLIC_APPWRITE_ENDPOINT}/storage/buckets/${process.env.NEXT_PUBLIC_APPWRITE_BUCKET}/files/${bucketFileId}/view?project=${process.env.NEXT_PUBLIC_APPWRITE_PROJECT}`;\n};\n\nexport const constructDownloadUrl = (bucketFileId: string) => {\n    return `${process.env.NEXT_PUBLIC_APPWRITE_ENDPOINT}/storage/buckets/${process.env.NEXT_PUBLIC_APPWRITE_BUCKET}/files/${bucketFileId}/download?project=${process.env.NEXT_PUBLIC_APPWRITE_PROJECT}`;\n};\n\n// DASHBOARD UTILS\nexport const getUsageSummary = (totalSpace: any) => {\n    return [\n        {\n            title: \"Documents\",\n            size: totalSpace.document.size,\n            latestDate: totalSpace.document.latestDate,\n            icon: \"/assets/icons/file-document-light.svg\",\n            url: \"/documents\",\n        },\n        {\n            title: \"Images\",\n            size: totalSpace.image.size,\n            latestDate: totalSpace.image.latestDate,\n            icon: \"/assets/icons/file-image-light.svg\",\n            url: \"/images\",\n        },\n        {\n            title: \"Media\",\n            size: totalSpace.video.size + totalSpace.audio.size,\n            latestDate:\n                totalSpace.video.latestDate > totalSpace.audio.latestDate\n                    ? totalSpace.video.latestDate\n                    : totalSpace.audio.latestDate,\n            icon: \"/assets/icons/file-video-light.svg\",\n            url: \"/media\",\n        },\n        {\n            title: \"Others\",\n            size: totalSpace.other.size,\n            latestDate: totalSpace.other.latestDate,\n            icon: \"/assets/icons/file-other-light.svg\",\n            url: \"/others\",\n        },\n    ];\n};\n\nexport const getFileTypesParams = (type: string) => {\n    switch (type) {\n        case \"documents\":\n            return [\"document\"];\n        case \"images\":\n            return [\"image\"];\n        case \"media\":\n            return [\"video\", \"audio\"];\n        case \"others\":\n            return [\"other\"];\n        default:\n            return [\"document\"];\n    }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-[0.8rem] text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-[0.8rem] font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 531, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8VACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/user.actions.ts"],"sourcesContent":["\"use server\";\n\nimport { ID, Query } from \"node-appwrite\";\nimport { createAdminClient, createSessionClient } from \"../appwrite\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { parseStringify } from \"../utils\";\nimport { cookies } from \"next/headers\";\nimport { avatarPlaceholderUrl } from \"@/constants\";\nimport { redirect } from \"next/navigation\";\n\nconst getUserByEmail = async (email: string) => {\n    const { databases } = await createAdminClient();\n\n    const result = await databases.listDocuments(\n        appwriteConfig.databaseId,\n        appwriteConfig.usersCollectionId,\n        [Query.equal(\"email\", [email])]\n    );\n\n    return result.total > 0 ? result.documents[0] : null;\n};\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const sendEmailOTP = async ({ email }: { email: string }) => {\n    const { account } = await createAdminClient();\n\n    try {\n        const session = await account.createEmailToken(ID.unique(), email);\n\n        return session.userId;\n    } catch (error) {\n        handleError(error, \"Failed to send email OTP\");\n    }\n};\n\nexport const createAccount = async ({\n    fullName,\n    email,\n}: {\n    fullName: string;\n    email: string;\n}) => {\n    const existingUser = await getUserByEmail(email);\n\n    const accountId = await sendEmailOTP({ email });\n    if (!accountId) throw new Error(\"Failed to send an OTP\");\n\n    if (!existingUser) {\n        const { databases } = await createAdminClient();\n\n        await databases.createDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.usersCollectionId,\n            ID.unique(),\n            {\n                fullName,\n                email,\n                avatar: avatarPlaceholderUrl,\n                accountId,\n            }\n        );\n    }\n\n    return parseStringify({ accountId });\n};\n\nexport const verifySecret = async ({\n    accountId,\n    password,\n}: {\n    accountId: string;\n    password: string;\n}) => {\n    try {\n        const { account } = await createAdminClient();\n\n        const session = await account.createSession(accountId, password);\n\n        (await cookies()).set(\"appwrite-session\", session.secret, {\n            path: \"/\",\n            httpOnly: true,\n            sameSite: \"strict\",\n            secure: true,\n        });\n\n        return parseStringify({ sessionId: session.$id });\n    } catch (error) {\n        handleError(error, \"Failed to verify OTP.\");\n    }\n};\n\nexport const getCurrentUser = async () => {\n    try {\n        const { account, databases } = await createSessionClient();\n\n        const result = await account.get();\n\n        const user = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.usersCollectionId,\n            [Query.equal(\"accountId\", result.$id)]\n        );\n\n        if (user.total <= 0) return null;\n\n        return parseStringify(user.documents[0]);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const signOutUser = async () => {\n    const { account } = await createSessionClient();\n\n    try {\n        await account.deleteSession(\"current\");\n        (await cookies()).delete(\"appwrite-session\");\n    } catch (error) {\n        handleError(error, \"Failed to sign out user\");\n    } finally {\n        redirect(\"/sign-in\");\n    }\n};\n\nexport const signInUser = async ({ email }: { email: string }) => {\n    try {\n        const existingUser = await getUserByEmail(email);\n\n        // User exits, send OTP\n        if (existingUser) {\n            await sendEmailOTP({ email });\n            return parseStringify({ accountId: existingUser.accountId });\n        }\n\n        return parseStringify({ accountId: null, error: \"User not found\" });\n    } catch (error) {\n        handleError(error, \"Failed to sign in user\");\n    }\n};\n"],"names":[],"mappings":";;;;;;IAuCa,gBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 597, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/user.actions.ts"],"sourcesContent":["\"use server\";\n\nimport { ID, Query } from \"node-appwrite\";\nimport { createAdminClient, createSessionClient } from \"../appwrite\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { parseStringify } from \"../utils\";\nimport { cookies } from \"next/headers\";\nimport { avatarPlaceholderUrl } from \"@/constants\";\nimport { redirect } from \"next/navigation\";\n\nconst getUserByEmail = async (email: string) => {\n    const { databases } = await createAdminClient();\n\n    const result = await databases.listDocuments(\n        appwriteConfig.databaseId,\n        appwriteConfig.usersCollectionId,\n        [Query.equal(\"email\", [email])]\n    );\n\n    return result.total > 0 ? result.documents[0] : null;\n};\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const sendEmailOTP = async ({ email }: { email: string }) => {\n    const { account } = await createAdminClient();\n\n    try {\n        const session = await account.createEmailToken(ID.unique(), email);\n\n        return session.userId;\n    } catch (error) {\n        handleError(error, \"Failed to send email OTP\");\n    }\n};\n\nexport const createAccount = async ({\n    fullName,\n    email,\n}: {\n    fullName: string;\n    email: string;\n}) => {\n    const existingUser = await getUserByEmail(email);\n\n    const accountId = await sendEmailOTP({ email });\n    if (!accountId) throw new Error(\"Failed to send an OTP\");\n\n    if (!existingUser) {\n        const { databases } = await createAdminClient();\n\n        await databases.createDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.usersCollectionId,\n            ID.unique(),\n            {\n                fullName,\n                email,\n                avatar: avatarPlaceholderUrl,\n                accountId,\n            }\n        );\n    }\n\n    return parseStringify({ accountId });\n};\n\nexport const verifySecret = async ({\n    accountId,\n    password,\n}: {\n    accountId: string;\n    password: string;\n}) => {\n    try {\n        const { account } = await createAdminClient();\n\n        const session = await account.createSession(accountId, password);\n\n        (await cookies()).set(\"appwrite-session\", session.secret, {\n            path: \"/\",\n            httpOnly: true,\n            sameSite: \"strict\",\n            secure: true,\n        });\n\n        return parseStringify({ sessionId: session.$id });\n    } catch (error) {\n        handleError(error, \"Failed to verify OTP.\");\n    }\n};\n\nexport const getCurrentUser = async () => {\n    try {\n        const { account, databases } = await createSessionClient();\n\n        const result = await account.get();\n\n        const user = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.usersCollectionId,\n            [Query.equal(\"accountId\", result.$id)]\n        );\n\n        if (user.total <= 0) return null;\n\n        return parseStringify(user.documents[0]);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const signOutUser = async () => {\n    const { account } = await createSessionClient();\n\n    try {\n        await account.deleteSession(\"current\");\n        (await cookies()).delete(\"appwrite-session\");\n    } catch (error) {\n        handleError(error, \"Failed to sign out user\");\n    } finally {\n        redirect(\"/sign-in\");\n    }\n};\n\nexport const signInUser = async ({ email }: { email: string }) => {\n    try {\n        const existingUser = await getUserByEmail(email);\n\n        // User exits, send OTP\n        if (existingUser) {\n            await sendEmailOTP({ email });\n            return parseStringify({ accountId: existingUser.accountId });\n        }\n\n        return parseStringify({ accountId: null, error: \"User not found\" });\n    } catch (error) {\n        handleError(error, \"Failed to sign in user\");\n    }\n};\n"],"names":[],"mappings":";;;;;;IAgIa,aAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,2KAAA,CAAA,OAAyB;AAE7C,MAAM,qBAAqB,2KAAA,CAAA,UAA4B;AAEvD,MAAM,oBAAoB,2KAAA,CAAA,SAA2B;AAErD,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,UAA4B;QAC3B,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,mBAAmB,WAAW,GAAG,2KAAA,CAAA,UAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,2KAAA,CAAA,UAA4B;gBAC3B,KAAK;gBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,2KAAA,CAAA,UAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,QAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,2KAAA,CAAA,QAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,cAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,uBAAuB,WAAW,GAChC,2KAAA,CAAA,cAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,KAAK;QAC/B,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,2KAAA,CAAA,SAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,2KAAA,CAAA,SAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 737, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ui/input-otp.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { cn } from \"@/lib/utils\"\nimport { MinusIcon } from \"@radix-ui/react-icons\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-9 w-9 items-center justify-center border-y border-r border-input text-sm shadow-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-1 ring-ring\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <MinusIcon />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,GAAG,OAAO,EAAE,oBAC9C,8OAAC,8IAAA,CAAA,WAAQ;QACP,KAAK;QACL,oBAAoB,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACnB,sDACA;QAEF,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,qBAAqB;QAAa,GAAG,KAAK;;;;;;AAEzE,cAAc,WAAW,GAAG;AAE5B,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACjC,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,8IAAA,CAAA,kBAAe;IACxD,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,GAAG,gBAAgB,KAAK,CAAC,MAAM;IAErE,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yKACA,YAAY,yBACZ;QAED,GAAG,KAAK;;YAER;YACA,8BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;;;;;;;;AAKzB;AACA,aAAa,WAAW,GAAG;AAE3B,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,GAAG,OAAO,EAAE,oBACf,8OAAC;QAAI,KAAK;QAAK,MAAK;QAAa,GAAG,KAAK;kBACvC,cAAA,8OAAC,gLAAA,CAAA,YAAS;;;;;;;;;;AAGd,kBAAkB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 828, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/user.actions.ts"],"sourcesContent":["\"use server\";\n\nimport { ID, Query } from \"node-appwrite\";\nimport { createAdminClient, createSessionClient } from \"../appwrite\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { parseStringify } from \"../utils\";\nimport { cookies } from \"next/headers\";\nimport { avatarPlaceholderUrl } from \"@/constants\";\nimport { redirect } from \"next/navigation\";\n\nconst getUserByEmail = async (email: string) => {\n    const { databases } = await createAdminClient();\n\n    const result = await databases.listDocuments(\n        appwriteConfig.databaseId,\n        appwriteConfig.usersCollectionId,\n        [Query.equal(\"email\", [email])]\n    );\n\n    return result.total > 0 ? result.documents[0] : null;\n};\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const sendEmailOTP = async ({ email }: { email: string }) => {\n    const { account } = await createAdminClient();\n\n    try {\n        const session = await account.createEmailToken(ID.unique(), email);\n\n        return session.userId;\n    } catch (error) {\n        handleError(error, \"Failed to send email OTP\");\n    }\n};\n\nexport const createAccount = async ({\n    fullName,\n    email,\n}: {\n    fullName: string;\n    email: string;\n}) => {\n    const existingUser = await getUserByEmail(email);\n\n    const accountId = await sendEmailOTP({ email });\n    if (!accountId) throw new Error(\"Failed to send an OTP\");\n\n    if (!existingUser) {\n        const { databases } = await createAdminClient();\n\n        await databases.createDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.usersCollectionId,\n            ID.unique(),\n            {\n                fullName,\n                email,\n                avatar: avatarPlaceholderUrl,\n                accountId,\n            }\n        );\n    }\n\n    return parseStringify({ accountId });\n};\n\nexport const verifySecret = async ({\n    accountId,\n    password,\n}: {\n    accountId: string;\n    password: string;\n}) => {\n    try {\n        const { account } = await createAdminClient();\n\n        const session = await account.createSession(accountId, password);\n\n        (await cookies()).set(\"appwrite-session\", session.secret, {\n            path: \"/\",\n            httpOnly: true,\n            sameSite: \"strict\",\n            secure: true,\n        });\n\n        return parseStringify({ sessionId: session.$id });\n    } catch (error) {\n        handleError(error, \"Failed to verify OTP.\");\n    }\n};\n\nexport const getCurrentUser = async () => {\n    try {\n        const { account, databases } = await createSessionClient();\n\n        const result = await account.get();\n\n        const user = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.usersCollectionId,\n            [Query.equal(\"accountId\", result.$id)]\n        );\n\n        if (user.total <= 0) return null;\n\n        return parseStringify(user.documents[0]);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const signOutUser = async () => {\n    const { account } = await createSessionClient();\n\n    try {\n        await account.deleteSession(\"current\");\n        (await cookies()).delete(\"appwrite-session\");\n    } catch (error) {\n        handleError(error, \"Failed to sign out user\");\n    } finally {\n        redirect(\"/sign-in\");\n    }\n};\n\nexport const signInUser = async ({ email }: { email: string }) => {\n    try {\n        const existingUser = await getUserByEmail(email);\n\n        // User exits, send OTP\n        if (existingUser) {\n            await sendEmailOTP({ email });\n            return parseStringify({ accountId: existingUser.accountId });\n        }\n\n        return parseStringify({ accountId: null, error: \"User not found\" });\n    } catch (error) {\n        handleError(error, \"Failed to sign in user\");\n    }\n};\n"],"names":[],"mappings":";;;;;;IA2Ba,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 841, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/user.actions.ts"],"sourcesContent":["\"use server\";\n\nimport { ID, Query } from \"node-appwrite\";\nimport { createAdminClient, createSessionClient } from \"../appwrite\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { parseStringify } from \"../utils\";\nimport { cookies } from \"next/headers\";\nimport { avatarPlaceholderUrl } from \"@/constants\";\nimport { redirect } from \"next/navigation\";\n\nconst getUserByEmail = async (email: string) => {\n    const { databases } = await createAdminClient();\n\n    const result = await databases.listDocuments(\n        appwriteConfig.databaseId,\n        appwriteConfig.usersCollectionId,\n        [Query.equal(\"email\", [email])]\n    );\n\n    return result.total > 0 ? result.documents[0] : null;\n};\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const sendEmailOTP = async ({ email }: { email: string }) => {\n    const { account } = await createAdminClient();\n\n    try {\n        const session = await account.createEmailToken(ID.unique(), email);\n\n        return session.userId;\n    } catch (error) {\n        handleError(error, \"Failed to send email OTP\");\n    }\n};\n\nexport const createAccount = async ({\n    fullName,\n    email,\n}: {\n    fullName: string;\n    email: string;\n}) => {\n    const existingUser = await getUserByEmail(email);\n\n    const accountId = await sendEmailOTP({ email });\n    if (!accountId) throw new Error(\"Failed to send an OTP\");\n\n    if (!existingUser) {\n        const { databases } = await createAdminClient();\n\n        await databases.createDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.usersCollectionId,\n            ID.unique(),\n            {\n                fullName,\n                email,\n                avatar: avatarPlaceholderUrl,\n                accountId,\n            }\n        );\n    }\n\n    return parseStringify({ accountId });\n};\n\nexport const verifySecret = async ({\n    accountId,\n    password,\n}: {\n    accountId: string;\n    password: string;\n}) => {\n    try {\n        const { account } = await createAdminClient();\n\n        const session = await account.createSession(accountId, password);\n\n        (await cookies()).set(\"appwrite-session\", session.secret, {\n            path: \"/\",\n            httpOnly: true,\n            sameSite: \"strict\",\n            secure: true,\n        });\n\n        return parseStringify({ sessionId: session.$id });\n    } catch (error) {\n        handleError(error, \"Failed to verify OTP.\");\n    }\n};\n\nexport const getCurrentUser = async () => {\n    try {\n        const { account, databases } = await createSessionClient();\n\n        const result = await account.get();\n\n        const user = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.usersCollectionId,\n            [Query.equal(\"accountId\", result.$id)]\n        );\n\n        if (user.total <= 0) return null;\n\n        return parseStringify(user.documents[0]);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const signOutUser = async () => {\n    const { account } = await createSessionClient();\n\n    try {\n        await account.deleteSession(\"current\");\n        (await cookies()).delete(\"appwrite-session\");\n    } catch (error) {\n        handleError(error, \"Failed to sign out user\");\n    } finally {\n        redirect(\"/sign-in\");\n    }\n};\n\nexport const signInUser = async ({ email }: { email: string }) => {\n    try {\n        const existingUser = await getUserByEmail(email);\n\n        // User exits, send OTP\n        if (existingUser) {\n            await sendEmailOTP({ email });\n            return parseStringify({ accountId: existingUser.accountId });\n        }\n\n        return parseStringify({ accountId: null, error: \"User not found\" });\n    } catch (error) {\n        handleError(error, \"Failed to sign in user\");\n    }\n};\n"],"names":[],"mappings":";;;;;;IAsEa,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 854, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/OTPModal.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n    AlertDialog,\n    AlertDialogAction,\n    AlertDialogContent,\n    AlertDialogDescription,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\n\nimport {\n    InputOTP,\n    InputOTPGroup,\n    InputOTPSlot,\n} from \"@/components/ui/input-otp\";\nimport Image from \"next/image\";\nimport React, { useState } from \"react\";\nimport { Button } from \"./ui/button\";\nimport { sendEmailOTP, verifySecret } from \"@/lib/actions/user.actions\";\nimport { useRouter } from \"next/navigation\";\n\nconst OTPModal = ({\n    accountId,\n    email,\n}: {\n    accountId: string;\n    email: string;\n}) => {\n    const router = useRouter();\n    const [isOpen, setIsOpen] = useState(true);\n    const [password, setPassword] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        setIsLoading(true);\n\n        try {\n            // Call API to verify OTP\n            const sessionId = await verifySecret({ accountId, password });\n\n            if (sessionId) router.push(\"/\")\n        } catch (error) {\n            console.error(\"Failed to verify OTP.\");\n        }\n\n        setIsLoading(false);\n    };\n\n    const handleResentOtp = async () => {\n        // Call API to resend OTP\n        await sendEmailOTP({ email });\n    };\n\n    return (\n        <AlertDialog open={isOpen} onOpenChange={setIsOpen}>\n            <AlertDialogContent className=\"shad-alert-dialog\">\n                <AlertDialogHeader className=\"relative flex justify-center\">\n                    <AlertDialogTitle className=\"h2 text-center\">\n                        Enter your OTP\n                        <Image\n                            src=\"/assets/icons/close-dark.svg\"\n                            alt=\"Close\"\n                            width={20}\n                            height={20}\n                            onClick={() => setIsOpen(false)}\n                            className=\"otp-close-button\"\n                        />\n                    </AlertDialogTitle>\n                    <AlertDialogDescription className=\"subtitle-2 text-center text-light-100\">\n                        We&apos;ve have sent a code{\" \"}\n                        <span className=\"pl-1 text-brand\">{email}</span>\n                    </AlertDialogDescription>\n                </AlertDialogHeader>\n\n                <InputOTP maxLength={6} value={password} onChange={setPassword}>\n                    <InputOTPGroup className=\"shad-otp\">\n                        <InputOTPSlot index={0} className=\"shad-otp-slot\" />\n                        <InputOTPSlot index={1} className=\"shad-otp-slot\" />\n                        <InputOTPSlot index={2} className=\"shad-otp-slot\" />\n                        <InputOTPSlot index={3} className=\"shad-otp-slot\" />\n                        <InputOTPSlot index={4} className=\"shad-otp-slot\" />\n                        <InputOTPSlot index={5} className=\"shad-otp-slot\" />\n                    </InputOTPGroup>\n                </InputOTP>\n\n                <AlertDialogFooter>\n                    <div className=\"flex w-full flex-col gap-4\">\n                        <AlertDialogAction\n                            onClick={handleSubmit}\n                            className=\"shad-submit-btn h-12\"\n                            type=\"button\"\n                        >\n                            Submit\n                            {isLoading && (\n                                <Image\n                                    src=\"/assets/icons/loader.svg\"\n                                    alt=\"loader\"\n                                    className=\"ml-2 animate-spin\"\n                                    width={24}\n                                    height={24}\n                                />\n                            )}\n                        </AlertDialogAction>\n\n                        <div className=\"subtitle-2 mt-2 text-center text-light-100\">\n                            Did&apos;nt get the code?\n                            <Button type=\"button\" variant=\"link\" className=\"pl-1 text-brand\" onClick={handleResentOtp}>\n                                Click to resend\n                            </Button>\n                        </div>\n                    </div>\n                </AlertDialogFooter>\n            </AlertDialogContent>\n        </AlertDialog>\n    );\n};\n\nexport default OTPModal;\n"],"names":[],"mappings":";;;;AAEA;AAUA;AAKA;AACA;AACA;AACA;AAAA;AACA;AArBA;;;;;;;;;AAuBA,MAAM,WAAW,CAAC,EACd,SAAS,EACT,KAAK,EAIR;IACG,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,aAAa;QAEb,IAAI;YACA,yBAAyB;YACzB,MAAM,YAAY,MAAM,CAAA,GAAA,sJAAA,CAAA,eAAY,AAAD,EAAE;gBAAE;gBAAW;YAAS;YAE3D,IAAI,WAAW,OAAO,IAAI,CAAC;QAC/B,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC;QAClB;QAEA,aAAa;IACjB;IAEA,MAAM,kBAAkB;QACpB,yBAAyB;QACzB,MAAM,CAAA,GAAA,sJAAA,CAAA,eAAY,AAAD,EAAE;YAAE;QAAM;IAC/B;IAEA,qBACI,8OAAC,oIAAA,CAAA,cAAW;QAAC,MAAM;QAAQ,cAAc;kBACrC,cAAA,8OAAC,oIAAA,CAAA,qBAAkB;YAAC,WAAU;;8BAC1B,8OAAC,oIAAA,CAAA,oBAAiB;oBAAC,WAAU;;sCACzB,8OAAC,oIAAA,CAAA,mBAAgB;4BAAC,WAAU;;gCAAiB;8CAEzC,8OAAC,6HAAA,CAAA,UAAK;oCACF,KAAI;oCACJ,KAAI;oCACJ,OAAO;oCACP,QAAQ;oCACR,SAAS,IAAM,UAAU;oCACzB,WAAU;;;;;;;;;;;;sCAGlB,8OAAC,oIAAA,CAAA,yBAAsB;4BAAC,WAAU;;gCAAwC;gCAC1C;8CAC5B,8OAAC;oCAAK,WAAU;8CAAmB;;;;;;;;;;;;;;;;;;8BAI3C,8OAAC,iIAAA,CAAA,WAAQ;oBAAC,WAAW;oBAAG,OAAO;oBAAU,UAAU;8BAC/C,cAAA,8OAAC,iIAAA,CAAA,gBAAa;wBAAC,WAAU;;0CACrB,8OAAC,iIAAA,CAAA,eAAY;gCAAC,OAAO;gCAAG,WAAU;;;;;;0CAClC,8OAAC,iIAAA,CAAA,eAAY;gCAAC,OAAO;gCAAG,WAAU;;;;;;0CAClC,8OAAC,iIAAA,CAAA,eAAY;gCAAC,OAAO;gCAAG,WAAU;;;;;;0CAClC,8OAAC,iIAAA,CAAA,eAAY;gCAAC,OAAO;gCAAG,WAAU;;;;;;0CAClC,8OAAC,iIAAA,CAAA,eAAY;gCAAC,OAAO;gCAAG,WAAU;;;;;;0CAClC,8OAAC,iIAAA,CAAA,eAAY;gCAAC,OAAO;gCAAG,WAAU;;;;;;;;;;;;;;;;;8BAI1C,8OAAC,oIAAA,CAAA,oBAAiB;8BACd,cAAA,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,oIAAA,CAAA,oBAAiB;gCACd,SAAS;gCACT,WAAU;gCACV,MAAK;;oCACR;oCAEI,2BACG,8OAAC,6HAAA,CAAA,UAAK;wCACF,KAAI;wCACJ,KAAI;wCACJ,WAAU;wCACV,OAAO;wCACP,QAAQ;;;;;;;;;;;;0CAKpB,8OAAC;gCAAI,WAAU;;oCAA6C;kDAExD,8OAAC,2HAAA,CAAA,SAAM;wCAAC,MAAK;wCAAS,SAAQ;wCAAO,WAAU;wCAAkB,SAAS;kDAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASvH;uCAEe","debugId":null}},
    {"offset": {"line": 1101, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/AuthForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n    Form,\n    FormControl,\n    FormField,\n    FormItem,\n    FormLabel,\n    FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { useState } from \"react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { createAccount, signInUser } from \"@/lib/actions/user.actions\";\nimport OTPModal from \"./OTPModal\";\n\ntype FormType = \"sign-in\" | \"sign-up\";\n\nconst authFormSchema = (formType: FormType) => {\n    return z.object({\n        email: z.string().email(),\n        fullname:\n            formType === \"sign-up\"\n                ? z.string().min(2).max(50)\n                : z.string().optional(),\n    });\n};\n\nconst AuthForm = ({ type }: { type: FormType }) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [accountId, setAccountId] = useState(null);\n\n    const formSchema = authFormSchema(type);\n\n    // 1. Define your form.\n    const form = useForm<z.infer<typeof formSchema>>({\n        resolver: zodResolver(formSchema),\n        defaultValues: {\n            fullname: \"\",\n            email: \"\",\n        },\n    });\n\n    // 2. Define a submit handler.\n    const onSubmit = async (values: z.infer<typeof formSchema>) => {\n        setIsLoading(true);\n        setErrorMessage(\"\");\n\n        try {\n            const user =\n                type === \"sign-up\"\n                    ? await createAccount({\n                          fullName: values.fullname || \"\",\n                          email: values.email,\n                      })\n                    : await signInUser({ email: values.email });\n\n            setAccountId(user.accountId);\n        } catch {\n            setErrorMessage(\"Failed to create an account. Please try again.\");\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <>\n            <Form {...form}>\n                <form\n                    onSubmit={form.handleSubmit(onSubmit)}\n                    className=\"auth-form\"\n                >\n                    <h1 className=\"form-title\">\n                        {type === \"sign-in\" ? \"Sign In\" : \"Sign Up\"}\n                    </h1>\n                    {type == \"sign-up\" && (\n                        <FormField\n                            control={form.control}\n                            name=\"fullname\"\n                            render={({ field }) => (\n                                <FormItem>\n                                    <div className=\"shad-form-item\">\n                                        <FormLabel className=\"shad-form-label\">\n                                            Full Name\n                                        </FormLabel>\n\n                                        <FormControl>\n                                            <Input\n                                                placeholder=\"Enter your full name\"\n                                                className=\"shad-input\"\n                                                {...field}\n                                            />\n                                        </FormControl>\n                                    </div>\n                                    <FormMessage className=\"shad-form-message\" />\n                                </FormItem>\n                            )}\n                        />\n                    )}\n\n                    <FormField\n                        control={form.control}\n                        name=\"email\"\n                        render={({ field }) => (\n                            <FormItem>\n                                <div className=\"shad-form-item\">\n                                    <FormLabel className=\"shad-form-label\">\n                                        Email\n                                    </FormLabel>\n\n                                    <FormControl>\n                                        <Input\n                                            placeholder=\"Enter your email\"\n                                            className=\"shad-input\"\n                                            {...field}\n                                        />\n                                    </FormControl>\n                                </div>\n                                <FormMessage className=\"shad-form-message\" />\n                            </FormItem>\n                        )}\n                    />\n\n                    <Button\n                        className=\"form-submit-button text-white\"\n                        disabled={isLoading}\n                    >\n                        {type === \"sign-in\" ? \"Sign In\" : \"Sign Up\"}\n\n                        {isLoading && (\n                            <Image\n                                src=\"/assets/icons/loader.svg\"\n                                alt=\"Loader\"\n                                width={24}\n                                height={24}\n                                className=\"ml-2 animate-spin\"\n                            />\n                        )}\n                    </Button>\n\n                    {errorMessage && (\n                        <p className=\"error-message\">*{errorMessage}</p>\n                    )}\n\n                    <div className=\"body-2 flex justify-center\">\n                        <p className=\"text-light-100\">\n                            {type === \"sign-in\"\n                                ? \"Don't have an account?\"\n                                : \"Already have an account?\"}\n                        </p>\n                        <Link\n                            href={type === \"sign-in\" ? \"/sign-up\" : \"/sign-in\"}\n                            className=\"ml-1 font-medium text-brand\"\n                        >\n                            {\" \"}\n                            {type === \"sign-in\" ? \"Sign Up\" : \"Sign In\"}\n                        </Link>\n                    </div>\n                </form>\n            </Form>\n\n            {/* OTP Verification */}\n\n            {accountId && (\n                <OTPModal\n                    email={form.getValues(\"email\")}\n                    accountId={accountId}\n                />\n            )}\n        </>\n    );\n};\n\nexport default AuthForm;\n"],"names":[],"mappings":"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","debugId":null}}]
}