{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/lib/actions/file.action.ts"],"sourcesContent":["\"use server\";\n\nimport { createAdminClient, createSessionClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n};\n\nexport const uploadFile = async ({\n    file,\n    ownerId,\n    accountId,\n    path,\n}: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n\n        const bucketFile = await storage.createFile(\n            appwriteConfig.bucketId,\n            ID.unique(),\n            inputFile\n        );\n\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId: accountId,\n            users: [],\n            bucketFieldId: bucketFile.$id,\n        };\n\n        const newFile = await databases\n            .createDocument(\n                appwriteConfig.databaseId,\n                appwriteConfig.filesCollectionId,\n                ID.unique(),\n                fileDocument\n            )\n            .catch(async (error: unknown) => {\n                await storage.deleteFile(\n                    appwriteConfig.bucketId,\n                    bucketFile.$id\n                );\n                handleError(error, \"Failed to create file document\");\n            });\n\n        revalidatePath(path);\n\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file.\");\n    }\n};\n\nconst createQueries = (\n    currentUser: Models.Document,\n    types: string[],\n    searchText: string,\n    sort: string,\n    limit?: number\n) => {\n    const queries = [\n        Query.or([\n            Query.equal(\"owner\", [currentUser.$id]),\n            Query.contains(\"users\", [currentUser.email]),\n        ]),\n    ];\n\n    if (types.length > 0) queries.push(Query.equal(\"type\", types));\n    if (searchText) queries.push(Query.contains(\"name\", searchText));\n    if (limit) queries.push(Query.limit(limit));\n\n    if (sort) {\n        const [sortBy, orderBy] = sort.split(\"-\");\n\n        queries.push(\n            orderBy === \"asc\" ? Query.orderAsc(sortBy) : Query.orderDesc(sortBy)\n        );\n    }\n\n    return queries;\n};\n\nexport const getFiles = async ({\n    types = [],\n    searchText = \"\",\n    sort = \"$createdAt-desc\",\n    limit,\n}: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n\n        if (!currentUser) throw new Error(\"User not found\");\n\n        const queries = createQueries(\n            currentUser,\n            types,\n            searchText,\n            sort,\n            limit\n        );\n\n        console.log({ currentUser, queries });\n\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            queries\n        );\n\n        console.log({ files });\n\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n};\n\nexport const renameFile = async ({\n    fileId,\n    name,\n    extension,\n    path,\n}: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const newName = `${name}.${extension}`;\n\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const updateFileUser = async ({\n    fileId,\n    emails,\n    path,\n}: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId,\n            {\n                users: emails,\n            }\n        );\n\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport const deleteFile = async ({\n    fileId,\n    bucketFileId,\n    path,\n}: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.filesCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify({ status: \"success\" });\n    } catch (error) {\n        handleError(error, \"Failed to rename file\");\n    }\n};\n\nexport async function getTotalSpaceUsed() {\n  try {\n    const { databases } = await createSessionClient();\n    const currentUser = await getCurrentUser();\n    if (!currentUser) throw new Error(\"User is not authenticated.\");\n\n    const files = await databases.listDocuments(\n      appwriteConfig.databaseId,\n      appwriteConfig.filesCollectionId,\n      [Query.equal(\"owner\", [currentUser.$id])],\n    );\n\n    const totalSpace = {\n      image: { size: 0, latestDate: \"\" },\n      document: { size: 0, latestDate: \"\" },\n      video: { size: 0, latestDate: \"\" },\n      audio: { size: 0, latestDate: \"\" },\n      other: { size: 0, latestDate: \"\" },\n      used: 0,\n      all: 2 * 1024 * 1024 * 1024 /* 2GB available bucket storage */,\n    };\n\n    files.documents.forEach((file) => {\n      const fileType = file.type as FileType;\n      totalSpace[fileType].size += file.size;\n      totalSpace.used += file.size;\n\n      if (\n        !totalSpace[fileType].latestDate ||\n        new Date(file.$updatedAt) > new Date(totalSpace[fileType].latestDate)\n      ) {\n        totalSpace[fileType].latestDate = file.$updatedAt;\n      }\n    });\n\n    return parseStringify(totalSpace);\n  } catch (error) {\n    handleError(error, \"Error calculating total space used:, \");\n  }\n}"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;AAEA,MAAM,cAAc,CAAC,OAAgB;IACjC,QAAQ,GAAG,CAAC,OAAO;IACnB,MAAM;AACV;AAEO,MAAM,aAAa,OAAO,EAC7B,IAAI,EACJ,OAAO,EACP,SAAS,EACT,IAAI,EACU;IACd,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,MAAM,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD;IAErD,IAAI;QACA,MAAM,YAAY,sJAAA,CAAA,YAAS,CAAC,UAAU,CAAC,MAAM,KAAK,IAAI;QAEtD,MAAM,aAAa,MAAM,QAAQ,UAAU,CACvC,yHAAA,CAAA,iBAAc,CAAC,QAAQ,EACvB,+IAAA,CAAA,KAAE,CAAC,MAAM,IACT;QAGJ,MAAM,eAAe;YACjB,MAAM,CAAA,GAAA,4GAAA,CAAA,cAAW,AAAD,EAAE,WAAW,IAAI,EAAE,IAAI;YACvC,MAAM,WAAW,IAAI;YACrB,KAAK,CAAA,GAAA,4GAAA,CAAA,mBAAgB,AAAD,EAAE,WAAW,GAAG;YACpC,WAAW,CAAA,GAAA,4GAAA,CAAA,cAAW,AAAD,EAAE,WAAW,IAAI,EAAE,SAAS;YACjD,MAAM,WAAW,YAAY;YAC7B,OAAO;YACP,WAAW;YACX,OAAO,EAAE;YACT,eAAe,WAAW,GAAG;QACjC;QAEA,MAAM,UAAU,MAAM,UACjB,cAAc,CACX,yHAAA,CAAA,iBAAc,CAAC,UAAU,EACzB,yHAAA,CAAA,iBAAc,CAAC,iBAAiB,EAChC,+IAAA,CAAA,KAAE,CAAC,MAAM,IACT,cAEH,KAAK,CAAC,OAAO;YACV,MAAM,QAAQ,UAAU,CACpB,yHAAA,CAAA,iBAAc,CAAC,QAAQ,EACvB,WAAW,GAAG;YAElB,YAAY,OAAO;QACvB;QAEJ,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QAEf,OAAO,CAAA,GAAA,4GAAA,CAAA,iBAAc,AAAD,EAAE;IAC1B,EAAE,OAAO,OAAO;QACZ,YAAY,OAAO;IACvB;AACJ;AAEA,MAAM,gBAAgB,CAClB,aACA,OACA,YACA,MACA;IAEA,MAAM,UAAU;QACZ,kJAAA,CAAA,QAAK,CAAC,EAAE,CAAC;YACL,kJAAA,CAAA,QAAK,CAAC,KAAK,CAAC,SAAS;gBAAC,YAAY,GAAG;aAAC;YACtC,kJAAA,CAAA,QAAK,CAAC,QAAQ,CAAC,SAAS;gBAAC,YAAY,KAAK;aAAC;SAC9C;KACJ;IAED,IAAI,MAAM,MAAM,GAAG,GAAG,QAAQ,IAAI,CAAC,kJAAA,CAAA,QAAK,CAAC,KAAK,CAAC,QAAQ;IACvD,IAAI,YAAY,QAAQ,IAAI,CAAC,kJAAA,CAAA,QAAK,CAAC,QAAQ,CAAC,QAAQ;IACpD,IAAI,OAAO,QAAQ,IAAI,CAAC,kJAAA,CAAA,QAAK,CAAC,KAAK,CAAC;IAEpC,IAAI,MAAM;QACN,MAAM,CAAC,QAAQ,QAAQ,GAAG,KAAK,KAAK,CAAC;QAErC,QAAQ,IAAI,CACR,YAAY,QAAQ,kJAAA,CAAA,QAAK,CAAC,QAAQ,CAAC,UAAU,kJAAA,CAAA,QAAK,CAAC,SAAS,CAAC;IAErE;IAEA,OAAO;AACX;AAEO,MAAM,WAAW,OAAO,EAC3B,QAAQ,EAAE,EACV,aAAa,EAAE,EACf,OAAO,iBAAiB,EACxB,KAAK,EACO;IACZ,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD;IAE5C,IAAI;QACA,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD;QAEvC,IAAI,CAAC,aAAa,MAAM,IAAI,MAAM;QAElC,MAAM,UAAU,cACZ,aACA,OACA,YACA,MACA;QAGJ,QAAQ,GAAG,CAAC;YAAE;YAAa;QAAQ;QAEnC,MAAM,QAAQ,MAAM,UAAU,aAAa,CACvC,yHAAA,CAAA,iBAAc,CAAC,UAAU,EACzB,yHAAA,CAAA,iBAAc,CAAC,iBAAiB,EAChC;QAGJ,QAAQ,GAAG,CAAC;YAAE;QAAM;QAEpB,OAAO,CAAA,GAAA,4GAAA,CAAA,iBAAc,AAAD,EAAE;IAC1B,EAAE,OAAO,OAAO;QACZ,YAAY,OAAO;IACvB;AACJ;AAEO,MAAM,aAAa,OAAO,EAC7B,MAAM,EACN,IAAI,EACJ,SAAS,EACT,IAAI,EACU;IACd,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD;IAE5C,IAAI;QACA,MAAM,UAAU,GAAG,KAAK,CAAC,EAAE,WAAW;QAEtC,MAAM,cAAc,MAAM,UAAU,cAAc,CAC9C,yHAAA,CAAA,iBAAc,CAAC,UAAU,EACzB,yHAAA,CAAA,iBAAc,CAAC,iBAAiB,EAChC,QACA;YACI,MAAM;QACV;QAGJ,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO,CAAA,GAAA,4GAAA,CAAA,iBAAc,AAAD,EAAE;IAC1B,EAAE,OAAO,OAAO;QACZ,YAAY,OAAO;IACvB;AACJ;AAEO,MAAM,iBAAiB,OAAO,EACjC,MAAM,EACN,MAAM,EACN,IAAI,EACe;IACnB,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD;IAE5C,IAAI;QACA,MAAM,cAAc,MAAM,UAAU,cAAc,CAC9C,yHAAA,CAAA,iBAAc,CAAC,UAAU,EACzB,yHAAA,CAAA,iBAAc,CAAC,iBAAiB,EAChC,QACA;YACI,OAAO;QACX;QAGJ,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO,CAAA,GAAA,4GAAA,CAAA,iBAAc,AAAD,EAAE;IAC1B,EAAE,OAAO,OAAO;QACZ,YAAY,OAAO;IACvB;AACJ;AAEO,MAAM,aAAa,OAAO,EAC7B,MAAM,EACN,YAAY,EACZ,IAAI,EACU;IACd,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD;IAErD,IAAI;QACA,MAAM,cAAc,MAAM,UAAU,cAAc,CAC9C,yHAAA,CAAA,iBAAc,CAAC,UAAU,EACzB,yHAAA,CAAA,iBAAc,CAAC,iBAAiB,EAChC;QAGJ,IAAI,aAAa;YACb,MAAM,QAAQ,UAAU,CAAC,yHAAA,CAAA,iBAAc,CAAC,QAAQ,EAAE;QACtD;QAEA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO,CAAA,GAAA,4GAAA,CAAA,iBAAc,AAAD,EAAE;YAAE,QAAQ;QAAU;IAC9C,EAAE,OAAO,OAAO;QACZ,YAAY,OAAO;IACvB;AACJ;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAA,GAAA,wHAAA,CAAA,sBAAmB,AAAD;QAC9C,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD;QACvC,IAAI,CAAC,aAAa,MAAM,IAAI,MAAM;QAElC,MAAM,QAAQ,MAAM,UAAU,aAAa,CACzC,yHAAA,CAAA,iBAAc,CAAC,UAAU,EACzB,yHAAA,CAAA,iBAAc,CAAC,iBAAiB,EAChC;YAAC,kJAAA,CAAA,QAAK,CAAC,KAAK,CAAC,SAAS;gBAAC,YAAY,GAAG;aAAC;SAAE;QAG3C,MAAM,aAAa;YACjB,OAAO;gBAAE,MAAM;gBAAG,YAAY;YAAG;YACjC,UAAU;gBAAE,MAAM;gBAAG,YAAY;YAAG;YACpC,OAAO;gBAAE,MAAM;gBAAG,YAAY;YAAG;YACjC,OAAO;gBAAE,MAAM;gBAAG,YAAY;YAAG;YACjC,OAAO;gBAAE,MAAM;gBAAG,YAAY;YAAG;YACjC,MAAM;YACN,KAAK,IAAI,OAAO,OAAO,KAAK,gCAAgC;QAC9D;QAEA,MAAM,SAAS,CAAC,OAAO,CAAC,CAAC;YACvB,MAAM,WAAW,KAAK,IAAI;YAC1B,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,KAAK,IAAI;YACtC,WAAW,IAAI,IAAI,KAAK,IAAI;YAE5B,IACE,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,IAChC,IAAI,KAAK,KAAK,UAAU,IAAI,IAAI,KAAK,UAAU,CAAC,SAAS,CAAC,UAAU,GACpE;gBACA,UAAU,CAAC,SAAS,CAAC,UAAU,GAAG,KAAK,UAAU;YACnD;QACF;QAEA,OAAO,CAAA,GAAA,4GAAA,CAAA,iBAAc,AAAD,EAAE;IACxB,EAAE,OAAO,OAAO;QACd,YAAY,OAAO;IACrB;AACF;;;IAzOa;IAiFA;IAqCA;IA2BA;IAwBA;IAyBS;;AAlMT,+OAAA;AAiFA,+OAAA;AAqCA,+OAAA;AA2BA,+OAAA;AAwBA,+OAAA;AAyBS,+OAAA","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/.next-internal/server/app/%28root%29/%5Btype%5D/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {$$RSC_SERVER_ACTION_0 as '00ca30670c488ed0f4e6145a62cad4e88220cb36a2'} from 'ACTIONS_MODULE0'\nexport {getCurrentUser as '7f1c7f2fc536f4be384cfbfe63d057b32d1e243475'} from 'ACTIONS_MODULE1'\nexport {signOutUser as '7f4deb24e1f0fe22c488f94549f00077fcb1b40084'} from 'ACTIONS_MODULE1'\nexport {signInUser as '7f978954c5a642a14bee359844137f4665893dc18c'} from 'ACTIONS_MODULE1'\nexport {createAccount as '7fbd2fa925ba7d865d47033d608db409f2caa4be0e'} from 'ACTIONS_MODULE1'\nexport {sendEmailOTP as '7fc932ab75f2356818f9faee00df0ed2b70621b98c'} from 'ACTIONS_MODULE1'\nexport {verifySecret as '7ff32fecbf6e333c8259cff2858f6410be38e3b8e3'} from 'ACTIONS_MODULE1'\nexport {createSessionClient as '7f41e91d2e71ca2b99bd93267517034802cc7f5df7'} from 'ACTIONS_MODULE2'\nexport {createAdminClient as '7f424f1c608eb0c6fce2188ee601e152f35a62305d'} from 'ACTIONS_MODULE2'\nexport {getFiles as '7fa49ac3cf8787fa17b38608a89e5894552a0fc6cb'} from 'ACTIONS_MODULE3'\nexport {uploadFile as '7fc662fc5127a6fe33cfec8705cc667705a8a6019a'} from 'ACTIONS_MODULE3'\nexport {getTotalSpaceUsed as '002d2ad480a14eb9f8f6ffdbc52ad718135a5bd0f5'} from 'ACTIONS_MODULE3'\nexport {renameFile as '7f5c821c7dfbbf22628bc2316ca3c7e1962f5a7133'} from 'ACTIONS_MODULE3'\nexport {updateFileUser as '7f8c22494b65f2b50b8842b023c9dca3fcfe91d7dc'} from 'ACTIONS_MODULE3'\nexport {deleteFile as '7fe907aedb1757dbae140991067f6b613457c09ee3'} from 'ACTIONS_MODULE3'\n"],"names":[],"mappings":";AAAA;AACA;AAMA;AAEA","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/Thumbnail.tsx"],"sourcesContent":["import { cn, getFileIcon } from \"@/lib/utils\";\nimport Image from \"next/image\";\nimport React from \"react\";\n\ninterface Props {\n    type: string;\n    extension: string;\n    url?: string;\n    imageClassName?: string;\n    className?: string;\n}\n\nexport const Thumbnail = ({\n    type,\n    extension,\n    url = \"\",\n    imageClassName,\n    className,\n}: Props) => {\n    const isImage = type === \"image\" && extension !== \"svg\";\n\n    return (\n        <figure className={cn(\"thumbnail\", className)}>\n            <Image\n                src={isImage ? url : getFileIcon(extension, type)}\n                alt=\"Thumbnail\"\n                width={100}\n                height={100}\n                className={cn(\n                    \"siz-8 object-contain\",\n                    imageClassName,\n                    isImage && \"thumbnail-image\"\n                )}\n            />\n        </figure>\n    );\n};\n\nexport default Thumbnail;\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAWO,MAAM,YAAY,CAAC,EACtB,IAAI,EACJ,SAAS,EACT,MAAM,EAAE,EACR,cAAc,EACd,SAAS,EACL;IACJ,MAAM,UAAU,SAAS,WAAW,cAAc;IAElD,qBACI,8OAAC;QAAO,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,aAAa;kBAC/B,cAAA,8OAAC,6HAAA,CAAA,UAAK;YACF,KAAK,UAAU,MAAM,CAAA,GAAA,4GAAA,CAAA,cAAW,AAAD,EAAE,WAAW;YAC5C,KAAI;YACJ,OAAO;YACP,QAAQ;YACR,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACR,wBACA,gBACA,WAAW;;;;;;;;;;;AAK/B;uCAEe","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/FormatedDateTime.tsx"],"sourcesContent":["import { cn, formatDateTime } from '@/lib/utils'\nimport React from 'react'\n\nconst FormatedDateTime = ({ date, className }: { date: string, className?: string }) => {\n  return (\n    <p className={cn('body-1 text-light-200', className)}>\n        {formatDateTime(date)}\n    </p>\n  )\n}\n\nexport default FormatedDateTime"],"names":[],"mappings":";;;;AAAA;;;AAGA,MAAM,mBAAmB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAwC;IACjF,qBACE,8OAAC;QAAE,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;kBACrC,CAAA,GAAA,4GAAA,CAAA,iBAAc,AAAD,EAAE;;;;;;AAGxB;uCAEe","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ActionDropdown.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/ActionDropdown.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ActionDropdown.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/ActionDropdown.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/ActionDropdown.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ActionDropdown.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA","debugId":null}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/Card.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport { Models } from \"node-appwrite\";\nimport React from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport { convertFileSize } from \"@/lib/utils\";\nimport FormatedDateTime from \"./FormatedDateTime\";\nimport ActionDropdown from \"./ActionDropdown\";\n\nconst Card = ({ file }: { file: Models.Document }) => {\n    return (\n        <Link href={file.url} target=\"_blank\" className=\"file-card\">\n            <div className=\"flex justify-between\">\n                <Thumbnail\n                    type={file.type}\n                    extension={file.extension}\n                    url={file.url}\n                    className=\"!size-20\"\n                    imageClassName=\"!size-11\"\n                />\n\n                <div className=\"flex flex-col justify-between items-end\">\n                    <ActionDropdown file={file} />\n\n                    <p className=\"body-1\">{convertFileSize(file.size)}</p>\n                </div>\n            </div>\n\n            <div className=\"file-card-details\">\n                <p className=\"subtitle-2 line-clamp-1\">{file.name}</p>\n\n                <FormatedDateTime\n                    date={file.$createdAt}\n                    className=\"body-2 text-light-100\"\n                />\n\n                <p className=\"caption line-clamp-1 text-light-200\">\n                    By: {file.owner.fullName}\n                </p>\n            </div>\n        </Link>\n    );\n};\n\nexport default Card;\n"],"names":[],"mappings":";;;;AAAA;AAGA;AACA;AACA;AACA;;;;;;;AAEA,MAAM,OAAO,CAAC,EAAE,IAAI,EAA6B;IAC7C,qBACI,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAM,KAAK,GAAG;QAAE,QAAO;QAAS,WAAU;;0BAC5C,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,wHAAA,CAAA,UAAS;wBACN,MAAM,KAAK,IAAI;wBACf,WAAW,KAAK,SAAS;wBACzB,KAAK,KAAK,GAAG;wBACb,WAAU;wBACV,gBAAe;;;;;;kCAGnB,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,6HAAA,CAAA,UAAc;gCAAC,MAAM;;;;;;0CAEtB,8OAAC;gCAAE,WAAU;0CAAU,CAAA,GAAA,4GAAA,CAAA,kBAAe,AAAD,EAAE,KAAK,IAAI;;;;;;;;;;;;;;;;;;0BAIxD,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAE,WAAU;kCAA2B,KAAK,IAAI;;;;;;kCAEjD,8OAAC,+HAAA,CAAA,UAAgB;wBACb,MAAM,KAAK,UAAU;wBACrB,WAAU;;;;;;kCAGd,8OAAC;wBAAE,WAAU;;4BAAsC;4BAC1C,KAAK,KAAK,CAAC,QAAQ;;;;;;;;;;;;;;;;;;;AAK5C;uCAEe","debugId":null}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/Sort.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/Sort.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/Sort.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuR,GACpT,qDACA","debugId":null}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/components/Sort.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/Sort.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/Sort.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmQ,GAChS,iCACA","debugId":null}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":["file:///Users/amaan/Desktop/Programming/React/store_it/app/%28root%29/%5Btype%5D/page.tsx"],"sourcesContent":["import Card from '@/components/Card';\nimport Sort from '@/components/Sort';\nimport { getFiles } from '@/lib/actions/file.action';\nimport { getFileTypesParams } from '@/lib/utils';\nimport { Models } from 'node-appwrite';\nimport React from 'react'\nimport { string } from 'zod';\n\nconst Page = async ({ searchParams, params }: SearchParamProps) => {\n    const type = ((await params)?.type as string) || \"\";\n    const searchText = ((await searchParams)?.query as string) || \"\";\n    const sort = ((await searchParams)?.sort as string) || \"\";\n\n    const types = getFileTypesParams(type) as FileType[];\n\n    const files = await getFiles({ types, searchText, sort });\n\n  return (\n    <div className='page-container'>\n        <section className='w-full'>\n            <h1 className='h1 capitalize'>{type}</h1>\n\n            <div className='total-size-section'>\n                <p className='body-1'>\n                    Total: <span className='h5'>0 MB</span>\n                </p>\n\n                <div className='sort-container'>\n                    <p className='body-1 hidden sm:block text-light-200'>\n                        Sort By: \n                    </p>\n\n                    <Sort />\n                </div>\n            </div>\n        </section>\n\n        {/* Render the files */}\n\n        {files.total > 0 ? (\n            <section className='file-list'>\n                {files.documents.map((file: Models.Document) => (\n                    <Card key={file.$id} file={file} />\n                ))}\n            </section>\n        ) : (\n            <p className='empty-list'>No files found</p>\n        )}\n    </div>\n  )\n}\n\nexport default Page"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAKA,MAAM,OAAO,OAAO,EAAE,YAAY,EAAE,MAAM,EAAoB;IAC1D,MAAM,OAAO,AAAC,CAAC,MAAM,MAAM,GAAG,QAAmB;IACjD,MAAM,aAAa,AAAC,CAAC,MAAM,YAAY,GAAG,SAAoB;IAC9D,MAAM,OAAO,AAAC,CAAC,MAAM,YAAY,GAAG,QAAmB;IAEvD,MAAM,QAAQ,CAAA,GAAA,4GAAA,CAAA,qBAAkB,AAAD,EAAE;IAEjC,MAAM,QAAQ,MAAM,CAAA,GAAA,gIAAA,CAAA,WAAQ,AAAD,EAAE;QAAE;QAAO;QAAY;IAAK;IAEzD,qBACE,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAQ,WAAU;;kCACf,8OAAC;wBAAG,WAAU;kCAAiB;;;;;;kCAE/B,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAE,WAAU;;oCAAS;kDACX,8OAAC;wCAAK,WAAU;kDAAK;;;;;;;;;;;;0CAGhC,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAE,WAAU;kDAAwC;;;;;;kDAIrD,8OAAC,mHAAA,CAAA,UAAI;;;;;;;;;;;;;;;;;;;;;;;YAOhB,MAAM,KAAK,GAAG,kBACX,8OAAC;gBAAQ,WAAU;0BACd,MAAM,SAAS,CAAC,GAAG,CAAC,CAAC,qBAClB,8OAAC,mHAAA,CAAA,UAAI;wBAAgB,MAAM;uBAAhB,KAAK,GAAG;;;;;;;;;qCAI3B,8OAAC;gBAAE,WAAU;0BAAa;;;;;;;;;;;;AAItC;uCAEe","debugId":null}}]
}